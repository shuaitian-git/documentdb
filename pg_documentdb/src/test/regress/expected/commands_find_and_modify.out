SET documentdb.next_collection_id TO 3000;
SET documentdb.next_collection_index_id TO 3000;
-- null db name
SELECT documentdb_api.find_and_modify(NULL, '{}');
ERROR:  The parameter p_database_name must not be NULL
-- null message
SELECT documentdb_api.find_and_modify('db', NULL);
ERROR:  p_message cannot be NULL
-- missing params
SELECT documentdb_api.find_and_modify('fam', '{}');
ERROR:  The BSON field 'findAndModify.findAndModify' is required but was not provided
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "remove_or_update"}');
ERROR:  You must specify either an update action or set remove=true for proper execution
-- no such collection, upsert=false
--  i) remove=true
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "dne", "query": {"a": 1000}, "remove": 0.1, "sort": {"b": -1}}');
                                                          find_and_modify                                                           
------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

--  ii) remove=false
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "dne", "query": {"a": 1}, "update": {"_id": 1, "b": 1}, "upsert": false}');
                                                                         find_and_modify                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" }, ""updatedExisting"" : false }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- no such collection, upsert=true
--  i) query is given
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "create_on_fam_1", "query": {"a": 1}, "update": {"_id": 1, "b": 1}, "upsert": 1.1}');
NOTICE:  creating collection
                                                                                              find_and_modify                                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""1"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'create_on_fam_1') ORDER BY document;
                             document                             
------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "b" : { "$numberInt" : "1" } }
(1 row)

--  ii) query is not given, and the upserted document is requested
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "create_on_fam_2", "update": {"_id": 1, "b": 1}, "upsert": true, "new": -1}');
NOTICE:  creating collection
                                                                                                                                  find_and_modify                                                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'create_on_fam_2') ORDER BY document;
                             document                             
------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "b" : { "$numberInt" : "1" } }
(1 row)

--  iii) enable_create_collection_on_insert is disabled
BEGIN;
  SET LOCAL documentdb.enable_create_collection_on_insert TO OFF;
  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "create_on_fam_3", "update": {"_id": 1, "b": 1}, "upsert": true}');
ERROR:  The collection named 'create_on_fam_3' cannot be found
ROLLBACK;
-- test conflicting options
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "opts_conflict", "remove": true, "update": {"b": 1}}');
ERROR:  It is not possible to specify both an update action and simultaneously set  remove=true
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "opts_conflict", "remove": true, "upsert": true}');
ERROR:  It is not allowed to set both upsert=true and remove=true simultaneously
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "opts_conflict", "remove": true, "new": true}');
ERROR:  It is not allowed to set both new=true and remove=true simultaneously, as the 'remove' always returns the document that was deleted.
-- field type validations
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": []}');
ERROR:  Collection name contains an invalid data type array
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "invalid_type", "query": 1}');
ERROR:  The BSON field 'findAndModify.query' has an incorrect type 'int'; it should be of type 'object'.
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "invalid_type", "sort": "text"}');
ERROR:  The BSON field 'findAndModify.sort' has an incorrect type 'string'; it should be of type 'object'.
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "invalid_type", "remove": {}}');
ERROR:  The BSON field 'findAndModify.remove' has an incorrect type 'object'; it should be one of the following valid types: [bool, long, int, decimal, double]
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "invalid_type", "update": 1}');
ERROR:  Update argument must be either an object or an array
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "invalid_type", "new": []}');
ERROR:  The BSON field 'findAndModify.new' has an incorrect type 'array'; it should be one of the following valid types: [bool, long, int, decimal, double]
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "invalid_type", "fields": "text"}');
ERROR:  The BSON field 'findAndModify.fields' has an incorrect type 'string'; it should be of type 'object'.
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "invalid_type", "upsert": []}');
ERROR:  The BSON field 'findAndModify.upsert' has an incorrect type 'array'; it should be one of the following valid types: [bool, long, int, decimal, double]
-- hard errors for unsupported options
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "not_supported", "arrayFilters": 1}');
ERROR:  The BSON field 'findAndModify.arrayFields' has an incorrect type 'int'; it should be of type 'array'.
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "not_supported", "hint": 1}');
ERROR:  findAndModify.hint is not implemented yet
-- unknown option
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "unknown_option", "unknown_option": 1}');
ERROR:  The BSON field 'findAndModify.unknown_option' is not recognized as a valid field.
SELECT 1 FROM documentdb_api.insert_one('fam', 'collection', '{"a":5,"b":7}');
NOTICE:  creating collection
 ?column? 
----------
        1
(1 row)

SELECT 1 FROM documentdb_api.insert_one('fam', 'collection', '{"a":5,"b":5}');
 ?column? 
----------
        1
(1 row)

SELECT 1 FROM documentdb_api.insert_one('fam', 'collection', '{"a":5,"b":6}');
 ?column? 
----------
        1
(1 row)

-- Disallow writes to system.views
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "system.views", "query": null, "remove": 0.0, "sort": {"b": -1}, "update": {"a": 10}, "fields": {"_id": 0}}');
ERROR:  Unable to write data to specified location fam.system.views
BEGIN;
  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": null, "remove": 0.0, "sort": {"b": -1}, "update": {"a": 10}, "fields": {"_id": 0}}');
                                                                                                           find_and_modify                                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""a"" : { ""$numberInt"" : ""5"" }, ""b"" : { ""$numberInt"" : ""7"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 5}, "sort": {"b": 1}, "update": 1, "update": {"a": 20}, "fields": {"_id": 0}}');
                                                                                                           find_and_modify                                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""a"" : { ""$numberInt"" : ""5"" }, ""b"" : { ""$numberInt"" : ""5"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 100}, "sort": {"b": 1}, "update": {"a": 1}, "fields": {"_id": 0, "b": 0}, "upsert": 0, "new": false}');
                                                                         find_and_modify                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" }, ""updatedExisting"" : false }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 100}, "sort": "", "sort": {"b": 1}, "update": {"a": 1}, "fields": {"_id": 0, "b": 0}, "upsert": false, "new": true}');
                                                                         find_and_modify                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" }, ""updatedExisting"" : false }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 100}, "sort": {"b": 1}, "update": {"_id": 40, "a": 30}, "fields": {"b": 1, "_id": 0}, "upsert": true}');
                                                                                               find_and_modify                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""40"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  -- using update operators / aggregation pipeline --
  -- multiple $inc, so only takes the last one into the account
  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": { "$gte": 15 } }, "sort": {"a": 1}, "update": {"$set": {"z": 5}, "$inc": {"z": 5}, "$inc": {"a": 10}}, "upsert": false, "new": true, "fields": {"_id": 0}}');
                                                                                                            find_and_modify                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""a"" : { ""$numberInt"" : ""30"" }, ""z"" : { ""$numberInt"" : ""5"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  -- multiple $set/$inc but provided via a single document, so applies all
  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 1000 }, "update": {"$set": {"_id": 1000, "p": 10, "r": 20}, "$inc": {"s": 30, "t": 40}}, "upsert": true, "new": true, "fields": {"_id": 0}}');
                                                                                                                                                                                            find_and_modify                                                                                                                                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""1000"" } }, ""value"" : { ""a"" : { ""$numberInt"" : ""1000"" }, ""p"" : { ""$numberInt"" : ""10"" }, ""r"" : { ""$numberInt"" : ""20"" }, ""s"" : { ""$numberInt"" : ""30"" }, ""t"" : { ""$numberInt"" : ""40"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"z": { "$exists": false } }, "sort": {"a": 1}, "update": [{"$set": {"a": -10}}, {"$addFields": {"z": 7}}], "upsert": false, "new": true, "fields": {"_id": 0}}');
                                                                                                                              find_and_modify                                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""a"" : { ""$numberInt"" : ""-10"" }, ""b"" : { ""$numberInt"" : ""6"" }, ""z"" : { ""$numberInt"" : ""7"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 2000 }, "update": [ {"$set": {"p": 40, "_id": 2000, "r": 50}}, {"$unset": "p"}, {"$set": {"r": 70}}], "new": true, "fields": {"_id": 0}, "upsert": 1}');
                                                                                                                                     find_and_modify                                                                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""2000"" } }, ""value"" : { ""a"" : { ""$numberInt"" : ""2000"" }, ""r"" : { ""$numberInt"" : ""70"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

ROLLBACK;
BEGIN;
  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 100}, "sort": {"b": 1}, "update": {"_id": 40, "a": [ 30 ]}, "fields": {"b": 1, "_id": 0}, "upsert": true}');
                                                                                               find_and_modify                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""40"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 100}, "sort": {"b": 1}, "update": { "$set": { "a.$[a]": 10 }}, "fields": {"b": 1, "_id": 0}, "upsert": true, "arrayFilters": [ { "a": 30 } ]}');
ERROR:  Failed to create the field 'a' within the element specified by {a : 100}
ROLLBACK;
BEGIN;
  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": { "$gte": 15 } }, "sort": {}, "update": {"$set": {"z": 5}, "$inc": {"z": 5}, "$inc": {"a": 10}}, "upsert": false, "new": true, "fields": {}}');
                                                                         find_and_modify                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" }, ""updatedExisting"" : false }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

ROLLBACK;
BEGIN;
  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": null, "remove": true, "sort": {"b": -1}, "fields": {"_id": 0, "a": 0}}');
                                                                           find_and_modify                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""b"" : { ""$numberInt"" : ""7"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 5}, "remove": true, "sort": {"b": 1}, "fields": {"_id": 0, "b": 1}, "upsert": null}');
                                                                           find_and_modify                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""b"" : { ""$numberInt"" : ""5"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 100}, "remove": true, "sort": {"b": 1}, "fields": {"_id": 0}}');
                                                          find_and_modify                                                           
------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"a": 100}, "remove": true, "sort": {}, "fields": {}}');
                                                          find_and_modify                                                           
------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

ROLLBACK;
-- test a sharded collection
SELECT documentdb_api.create_collection('fam','sharded_collection');
NOTICE:  creating collection
 create_collection 
-------------------
 t
(1 row)

SELECT documentdb_api.shard_collection('fam','sharded_collection', '{"a":"hashed"}', false);
 shard_collection 
------------------
 
(1 row)

SELECT 1 FROM documentdb_api.insert_one('fam', 'sharded_collection', '{"a": 10,"b":7}');
 ?column? 
----------
        1
(1 row)

SELECT 1 FROM documentdb_api.insert_one('fam', 'sharded_collection', '{"a":20,"b":5}');
 ?column? 
----------
        1
(1 row)

SELECT 1 FROM documentdb_api.insert_one('fam', 'sharded_collection', '{"a":30,"b":6}');
 ?column? 
----------
        1
(1 row)

SELECT 1 FROM documentdb_api.insert_one('fam', 'sharded_collection', '{"b":8}');
 ?column? 
----------
        1
(1 row)

SELECT 1 FROM documentdb_api.insert_one('fam', 'sharded_collection', '{"b":9,"a": null}');
 ?column? 
----------
        1
(1 row)

-- update the shard key
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"a": 10}, "update": {"$set": {"a": 1000}}, "fields": {"_id": 0}, "new": true}');
                                                                                                             find_and_modify                                                                                                             
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""a"" : { ""$numberInt"" : ""1000"" }, ""b"" : { ""$numberInt"" : ""7"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- update a field other than the shard key
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"a": 20}, "update": {"$set": {"b": -1}}, "fields": {"_id": 0}, "new": true}');
                                                                                                            find_and_modify                                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""a"" : { ""$numberInt"" : ""20"" }, ""b"" : { ""$numberInt"" : ""-1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- test upsert
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"a": -1}, "update": {"$set": {"b": -2, "_id": 100}}, "new": true, "upsert": true}');
                                                                                                                                                       find_and_modify                                                                                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""100"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""100"" }, ""a"" : { ""$numberInt"" : ""-1"" }, ""b"" : { ""$numberInt"" : ""-2"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- test "null" shard key: i) shard key is really equal to null
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"a": null}, "update": {"$set": {"b": -3}}, "fields": {"_id": 0}, "sort": {"b": -1}, "new": true}');
                                                                                                 find_and_modify                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""b"" : { ""$numberInt"" : ""-3"" }, ""a"" : null }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- test "null" shard key: ii) shard key is not set
-- should update the document having {"b": 8} even if it doesn't specify "a" field at all
BEGIN;
  SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"a": null}, "update": {"$set": {"b": -4}}, "fields": {"_id": 0}, "sort": {"b": -1}, "new": false}');
                                                                                         find_and_modify                                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""b"" : { ""$numberInt"" : ""8"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

ROLLBACK;
-- test "null" shard key: iii) shard key is not set
-- should update the document having {"b": -3}
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"a": null}, "update": {"b": -4}, "fields": {"_id": 0}, "sort": {"b": 1}, "new": false}');
                                                                                                 find_and_modify                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""b"" : { ""$numberInt"" : ""-3"" }, ""a"" : null }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- missing shard key
--SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"a": { "$gte": 15 } }, "update": {"$set": {"z": 5}}}');
--SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": null, "update": {"a": 10}}');
--SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"b": -2}, "remove": true}');
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"b": -2, "a": -1}, "remove": true}');
                                                                                                                  find_and_modify                                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""100"" }, ""a"" : { ""$numberInt"" : ""-1"" }, ""b"" : { ""$numberInt"" : ""-2"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- should match the document having {"b": -4} even if it doesn't specify "a" field at all
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "sharded_collection", "query": {"b": -4, "a": null}, "remove": true, "fields": {"_id": 0}}');
                                                                            find_and_modify                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""b"" : { ""$numberInt"" : ""-4"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- show that we validate "update" document even if collection doesn't exist or if we can't match any documents
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "dne", "query": {"a": 1}, "update": { "$set": { "a": 1 }, "$unset": {"a": 1 } } }');
ERROR:  Modifying the path 'a' will result in a conflict occurring at 'a'
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "dne", "query": {"$a": 1}, "update": { "$set": { "a": 1 } } }');
ERROR:  unknown top level operator: $a. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.
SELECT documentdb_api.create_collection('fam', 'no_match');
NOTICE:  creating collection
 create_collection 
-------------------
 t
(1 row)

\set VERBOSITY TERSE
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "no_match", "update": { "$set": { "a": 1 }, "$unset": {"a": 1 } }}');
ERROR:  Modifying the path 'a' will result in a conflict occurring at 'a'
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "no_match", "query": {"$a": 1}, "update": { "$set": { "a": 1 } } }');
ERROR:  unknown top level operator: $a. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.
\set VERBOSITY DEFAULT
-- test retryable update
SELECT 1 FROM documentdb_api.insert_one('fam', 'retryable_update', '{"_id": 1, "a": 1, "b": 1}');
NOTICE:  creating collection
 ?column? 
----------
        1
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update", "query": {"a": 1}, "update": {"$inc": {"b": 1}}, "new": false}', 'xact-1');
                                                                                                                              find_and_modify                                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""a"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update", "query": {"a": 1}, "update": {"$inc": {"b": 1}}, "new": true}', 'xact-1');
                                                                                                                              find_and_modify                                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""a"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'retryable_update') ORDER BY document;
                                            document                                            
------------------------------------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "$numberInt" : "1" }, "b" : { "$numberInt" : "2" } }
(1 row)

-- third call is considered a new try
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update", "query": {"a": 1}, "update": {"$inc": {"b": 1}}, "new": true, "fields": {"a": 0}}', 'xact-1');
                                                                                                            find_and_modify                                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""3"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update", "query": {"a": 1}, "update": {"$inc": {"b": 1}}, "new": true, "fields": {"_id": 0}}', 'xact-1');
                                                                                                            find_and_modify                                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""3"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'retryable_update') ORDER BY document;
                                            document                                            
------------------------------------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "$numberInt" : "1" }, "b" : { "$numberInt" : "3" } }
(1 row)

SELECT documentdb_api.shard_collection('fam','retryable_update', '{"a":"hashed"}', false);
 shard_collection 
------------------
 
(1 row)

-- test with upsert
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update", "query": {"_id": 2, "a": 100}, "update": {"$inc": {"b": 1}}, "new": true, "upsert": true, "fields": {"a": 0}}', 'xact-1');
                                                                                                                                  find_and_modify                                                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""2"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""2"" }, ""b"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- Note that specifying different values for "new"/"fields" fields doesn't
-- have any effect on the response message.
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update", "query": {"_id": 2, "a": 100}, "update": {"$inc": {"b": 1}}, "new": false, "upsert": true, "fields": {"b": 0}}', 'xact-1');
                                                                                                                                  find_and_modify                                                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""2"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""2"" }, ""b"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'retryable_update') ORDER BY document;
                                             document                                             
--------------------------------------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "$numberInt" : "1" }, "b" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "$numberInt" : "100" }, "b" : { "$numberInt" : "1" } }
(2 rows)

-- test with upsert, collection gets created automatically
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update_dne", "query": {"_id": 2, "a": 100}, "update": {"$inc": {"b": 1}}, "new": false, "upsert": true}', 'xact-2');
NOTICE:  creating collection
                                                                                              find_and_modify                                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""2"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update_dne", "query": {"_id": 2, "a": 100}, "update": {"$inc": {"b": 1}}, "new": true, "upsert": true}', 'xact-2');
                                                                                              find_and_modify                                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""2"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'retryable_update_dne') ORDER BY document;
                                             document                                             
--------------------------------------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : { "$numberInt" : "100" }, "b" : { "$numberInt" : "1" } }
(1 row)

-- test retryable delete
SELECT 1 FROM documentdb_api.insert_one('fam', 'retryable_delete', '{"_id": 1, "a": 1, "b": 1}');
NOTICE:  creating collection
 ?column? 
----------
        1
(1 row)

SELECT 1 FROM documentdb_api.insert_one('fam', 'retryable_delete', '{"_id": 2, "a": 1, "b": 1}');
 ?column? 
----------
        1
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete", "query": {"a": 1}, "remove": true}', 'xact-11');
                                                                                                                find_and_modify                                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""a"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete", "query": {"a": 1}, "remove": true}', 'xact-11');
                                                                                                                find_and_modify                                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""a"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'retryable_delete') ORDER BY document;
                                            document                                            
------------------------------------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : { "$numberInt" : "1" }, "b" : { "$numberInt" : "1" } }
(1 row)

-- third call is considered a new try
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete", "query": {"a": 1}, "remove": true, "fields": {"b": 0}}', 'xact-11');
                                                                                              find_and_modify                                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""2"" }, ""a"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete", "query": {"a": 1}, "remove": true, "fields": {"a": 0}}', 'xact-11');
                                                                                              find_and_modify                                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""2"" }, ""a"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'retryable_delete') ORDER BY document;
 document 
----------
(0 rows)

SELECT 1 FROM documentdb_api.insert_one('fam', 'retryable_delete_sharded', '{"_id": 1, "a": 1, "b": 1}');
NOTICE:  creating collection
 ?column? 
----------
        1
(1 row)

SELECT 1 FROM documentdb_api.insert_one('fam', 'retryable_delete_sharded', '{"_id": 2, "a": 1, "b": 1}');
 ?column? 
----------
        1
(1 row)

SELECT documentdb_api.shard_collection('fam','retryable_delete_sharded', '{"a":"hashed"}', false);
 shard_collection 
------------------
 
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete_sharded", "query": {"a": 1}, "remove": true, "fields": {"b": 0}}', 'xact-14');
                                                                                              find_and_modify                                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""a"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete_sharded", "query": {"a": 1}, "remove": true, "fields": {"a": 0}}', 'xact-14');
                                                                                              find_and_modify                                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""a"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'retryable_delete_sharded') ORDER BY document;
                                            document                                            
------------------------------------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : { "$numberInt" : "1" }, "b" : { "$numberInt" : "1" } }
(1 row)

-- third call is considered a new try
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete_sharded", "query": {"a": 1}, "remove": true}', 'xact-14');
                                                                                                                find_and_modify                                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""2"" }, ""a"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete_sharded", "query": {"a": 1}, "remove": true}', 'xact-14');
                                                                                                                find_and_modify                                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""2"" }, ""a"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'retryable_delete_sharded') ORDER BY document;
 document 
----------
(0 rows)

-- test with a query that doesn't match any documents
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete", "query": {"a": 100}, "remove": true}', 'xact-11');
                                                          find_and_modify                                                           
------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete", "query": {"a": 100}, "remove": true}', 'xact-11');
                                                          find_and_modify                                                           
------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- test with a collection that doesn't exist
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete_dne", "query": {"a": 100}, "remove": true}', 'xact-13');
                                                          find_and_modify                                                           
------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_delete_dne", "query": {"a": 100}, "remove": true}', 'xact-13');
                                                          find_and_modify                                                           
------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""0"" } }, ""value"" : null, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update", "query": {"a": 1}, "update": {"$inc": {"b": 1}}, "new": true, "fields": {"a": 0}}', 'xact-20');
                                                                                                            find_and_modify                                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""4"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "retryable_update", "query": {"a": 1}, "update": {"$inc": {"b": 1}}, "new": true, "fields": {"a": 0}}', 'xact-20');
                                                                                                            find_and_modify                                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""b"" : { ""$numberInt"" : ""4"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT document FROM documentdb_api.collection('fam', 'retryable_update') ORDER BY document;
                                             document                                             
--------------------------------------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "$numberInt" : "1" }, "b" : { "$numberInt" : "4" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "$numberInt" : "100" }, "b" : { "$numberInt" : "1" } }
(2 rows)

-- unknown operator expressions in fields argument
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"_id": 1}, "update": {"$inc": {"b": 1}}, "new": true, "upsert": true, "fields": {"foo": {"$pop": ["bar"]}}}');
ERROR:  Unrecognized expression format: $pop
-- test with operator expression in fields argument
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"_id": 1}, "update": {"$inc": {"b": 1}}, "new": true, "upsert": true, "fields": {"foo": {"$pow": [1, 2]}}}');
                                                                                                                                   find_and_modify                                                                                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""1"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""foo"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- schema validation
set documentdb.enableSchemaValidation = on;
SELECT documentdb_api_catalog.bson_dollar_project(document,'{"_id":0,"a":1,"b":1}') FROM documentdb_api.collection('fam', 'collection') ORDER BY document;
                      bson_dollar_project                       
----------------------------------------------------------------
 { "b" : { "$numberInt" : "1" } }
 { "a" : { "$numberInt" : "5" }, "b" : { "$numberInt" : "7" } }
 { "a" : { "$numberInt" : "5" }, "b" : { "$numberInt" : "5" } }
 { "a" : { "$numberInt" : "5" }, "b" : { "$numberInt" : "6" } }
(4 rows)

SELECT documentdb_api.coll_mod('fam', 'collection', '{"collMod": "collection", "validator": {"$jsonSchema": {"bsonType": "object", "properties": {"a": {"bsonType": "int"}}}}}');
             coll_mod              
-----------------------------------
 { "ok" : { "$numberInt" : "1" } }
(1 row)

-- expect to fail since "a" is not an int
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"_id": 1}, "update": {"$set": {"a": "hello"}}, "new": true, "upsert": true, "fields": {"foo": {"$pow": [1, 2]}}}');
ERROR:  Document failed validation
-- expect to succeed, upsert
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"_id": 2}, "update": {"$set": {"a": 200}}, "new": true, "upsert": true, "fields": {"foo": {"$pow": [1, 2]}}}');
                                                                                                                                   find_and_modify                                                                                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : false, ""upserted"" : { ""$numberInt"" : ""2"" } }, ""value"" : { ""_id"" : { ""$numberInt"" : ""2"" }, ""foo"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- expect to succeed, update
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"_id": 1}, "update": {"$set": {"a": 10}}, "new": true, "upsert": true, "fields": {"foo": {"$pow": [1, 2]}}}');
                                                                                                             find_and_modify                                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""1"" }, ""foo"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

select documentdb_api.coll_mod('fam', 'collection', '{"collMod": "collection", "validationLevel": "moderate", "validationAction": "warn"}');
             coll_mod              
-----------------------------------
 { "ok" : { "$numberInt" : "1" } }
(1 row)

select documentdb_api.insert_one('fam', 'collection', '{"_id": 3, "a": "hello", "b": 11}');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

select documentdb_api.coll_mod('fam', 'collection', '{"collMod": "collection", "validationAction": "error"}');
             coll_mod              
-----------------------------------
 { "ok" : { "$numberInt" : "1" } }
(1 row)

-- expect to succeed, validationLevel=moderate
select documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"_id": 3}, "update": {"$set": {"a": "test"}}, "new": true, "upsert": true, "fields": {"foo": {"$pow": [1, 2]}}}');
                                                                                                             find_and_modify                                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""3"" }, ""foo"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api_catalog.bson_dollar_project(document,'{"_id":0,"a":1,"b":1}') FROM documentdb_api.collection('fam', 'collection') ORDER BY document;
                       bson_dollar_project                       
-----------------------------------------------------------------
 { "b" : { "$numberInt" : "1" }, "a" : { "$numberInt" : "10" } }
 { "a" : { "$numberInt" : "200" } }
 { "a" : "test", "b" : { "$numberInt" : "11" } }
 { "a" : { "$numberInt" : "5" }, "b" : { "$numberInt" : "7" } }
 { "a" : { "$numberInt" : "5" }, "b" : { "$numberInt" : "5" } }
 { "a" : { "$numberInt" : "5" }, "b" : { "$numberInt" : "6" } }
(6 rows)

-- shard collection
SELECT documentdb_api.shard_collection('fam','collection', '{"_id":"hashed"}', false);
 shard_collection 
------------------
 
(1 row)

SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"_id": 3}, "update": {"$set": {"a": "plus"}}, "new": true, "upsert": true, "fields": {"foo": {"$pow": [1, 2]}}}');
                                                                                                             find_and_modify                                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""3"" }, ""foo"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

-- expect to fail
select  documentdb_api.coll_mod('fam', 'collection', '{"collMod": "collection", "validationLevel": "strict"}');
             coll_mod              
-----------------------------------
 { "ok" : { "$numberInt" : "1" } }
(1 row)

select documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"_id": 3}, "update": {"$set": {"a": "zero"}}, "new": true, "upsert": true, "fields": {"foo": {"$pow": [1, 2]}}}');
ERROR:  Document failed validation
set documentdb.enableBypassDocumentValidation = on;
select documentdb_api.find_and_modify('fam', '{"findAndModify": "collection", "query": {"_id": 3}, "update": {"$set": {"a": "zero"}}, "new": true, "upsert": true, "bypassDocumentValidation": true, "fields": {"foo": {"$pow": [1, 2]}}}');
                                                                                                             find_and_modify                                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""lastErrorObject"" : { ""n"" : { ""$numberInt"" : ""1"" }, ""updatedExisting"" : true }, ""value"" : { ""_id"" : { ""$numberInt"" : ""3"" }, ""foo"" : { ""$numberInt"" : ""1"" } }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api_catalog.bson_dollar_project(document,'{"_id":0,"a":1,"b":1}') FROM documentdb_api.collection('fam', 'collection') ORDER BY document;
                       bson_dollar_project                       
-----------------------------------------------------------------
 { "b" : { "$numberInt" : "1" }, "a" : { "$numberInt" : "10" } }
 { "a" : { "$numberInt" : "200" } }
 { "a" : "zero", "b" : { "$numberInt" : "11" } }
 { "a" : { "$numberInt" : "5" }, "b" : { "$numberInt" : "7" } }
 { "a" : { "$numberInt" : "5" }, "b" : { "$numberInt" : "5" } }
 { "a" : { "$numberInt" : "5" }, "b" : { "$numberInt" : "6" } }
(6 rows)

set documentdb.enableSchemaValidation = off;
set documentdb.enableBypassDocumentValidation = off;

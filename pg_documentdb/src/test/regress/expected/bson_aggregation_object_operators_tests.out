SET search_path TO documentdb_api,documentdb_core,documentdb_api_catalog;
SET documentdb.next_collection_id TO 3600;
SET documentdb.next_collection_index_id TO 3600;
-- $getField operator
SELECT documentdb_api.insert_one('db','test_get_field',' { "_id": 0, "a": 1, "b": "test" }');
NOTICE:  creating collection
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- positive cases
-- entire expression
-- field parsed from $literal
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$getField": {"field": { "$literal": "a" }, "input": {"a": { "b": 3 }}}}}}');
                        bson_dollar_project                         
--------------------------------------------------------------------
 { "result" : { "fieldValue" : { "b" : { "$numberInt" : "3" } } } }
(1 row)

-- field parsed from expression
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$getField": {"field": { "$literal": "a" }, "input": {"a": { "b": 3 }}}}}}');
                        bson_dollar_project                         
--------------------------------------------------------------------
 { "result" : { "fieldValue" : { "b" : { "$numberInt" : "3" } } } }
(1 row)

-- field is a path
SELECT document FROM documentdb_api_catalog.bson_aggregation_pipeline('db', '{ "aggregate": "test_get_field", "pipeline":  [{"$project": {"result": {"fieldValue": {"$getField": {"field": "$b", "input": {"test": { "b": 3 }}}}}}}]}');
                                              document                                              
----------------------------------------------------------------------------------------------------
 { "_id" : { "$numberInt" : "0" }, "result" : { "fieldValue" : { "b" : { "$numberInt" : "3" } } } }
(1 row)

-- input be a system variable
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": 3 }}', '{"result": { "fieldValue": {"$getField": {"field": "a", "input": "$$ROOT"}}}}');
                        bson_dollar_project                         
--------------------------------------------------------------------
 { "result" : { "fieldValue" : { "b" : { "$numberInt" : "3" } } } }
(1 row)

-- input be null
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": 3 }}', '{"result": { "fieldValue": {"$getField": {"field": "a", "input": null}}}}');
          bson_dollar_project           
----------------------------------------
 { "result" : { "fieldValue" : null } }
(1 row)

-- input be a path
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": 3 }}', '{"result": { "fieldValue": {"$getField": {"field": "b", "input": "$a"}}}}');
                   bson_dollar_project                    
----------------------------------------------------------
 { "result" : { "fieldValue" : { "$numberInt" : "3" } } }
(1 row)

-- input be a missing path
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": 3 }}', '{"result": { "fieldValue": {"$getField": {"field": "b", "input": "$adf"}}}}');
 bson_dollar_project 
---------------------
 { "result" : {  } }
(1 row)

-- input be constant
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": 3 }}', '{"result": { "fieldValue": {"$getField": {"field": "b", "input": "dx"}}}}');
 bson_dollar_project 
---------------------
 { "result" : {  } }
(1 row)

-- get array field value
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": ["1"] }}', '{"result": { "fieldValue": {"$getField": {"field": "b", "input": "$a"}}}}');
            bson_dollar_project            
-------------------------------------------
 { "result" : { "fieldValue" : [ "1" ] } }
(1 row)

-- get document field value
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": {"c": "1"} }}', '{"result": { "fieldValue": {"$getField": {"field": "b", "input": "$a"}}}}');
               bson_dollar_project               
-------------------------------------------------
 { "result" : { "fieldValue" : { "c" : "1" } } }
(1 row)

-- field name contains $ and .
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": {"c": "nested text"}, "b.c": "plain text" }}', '{"result": { "fieldValue": {"$getField": {"field": "b.c", "input": "$a"}}}}');
              bson_dollar_project               
------------------------------------------------
 { "result" : { "fieldValue" : "plain text" } }
(1 row)

SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "$b.01": {"c": "1"} }}', '{"result": { "fieldValue": {"$getField": {"field": { "$literal": "$b.01" }, "input": "$a"}}}}');
               bson_dollar_project               
-------------------------------------------------
 { "result" : { "fieldValue" : { "c" : "1" } } }
(1 row)

-- nested expression
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": 3 }}', '{"result": { "fieldValue": {"$getField": {"field": "b", "input": { "$getField": "a" }}}}}');
                   bson_dollar_project                    
----------------------------------------------------------
 { "result" : { "fieldValue" : { "$numberInt" : "3" } } }
(1 row)

-- test pipeline
SELECT documentdb_api.insert_one('db','getfield','{"_id":"1", "a": null }', NULL);
NOTICE:  creating collection
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','getfield','{"_id":"2", "a": { "b": 1 } }', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','getfield','{"_id":"3"}', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "getfield", "pipeline": [ { "$project": { "fieldValue": { "$getField": { "field": "b", "input": "$a" }}}}], "cursor": {} }');
                        document                        
--------------------------------------------------------
 { "_id" : "1", "fieldValue" : null }
 { "_id" : "2", "fieldValue" : { "$numberInt" : "1" } }
 { "_id" : "3" }
(3 rows)

-- shorthand expression
-- input will be $$CURRENT
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": 3 }}', '{"result": { "fieldValue": {"$getField": "a"}}}');
                        bson_dollar_project                         
--------------------------------------------------------------------
 { "result" : { "fieldValue" : { "b" : { "$numberInt" : "3" } } } }
(1 row)

SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": { "b": 3 }}', '{"result": { "fieldValue": {"$getField": "b"}}}');
 bson_dollar_project 
---------------------
 { "result" : {  } }
(1 row)

-- negative cases
-- full expression
-- field is required
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$getField": {}}}}');
ERROR:  $getField requires that the 'field' parameter must be explicitly specified
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$getField": {"input": {}}}}}');
ERROR:  $getField requires that the 'field' parameter must be explicitly specified
-- input is required
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$getField": {"field": "a"}}}}');
ERROR:  $getField needs the 'input' parameter to be defined
-- field must be a string
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$getField": {"field": null, "input": {}}}}}');
ERROR:  $getField needs 'field' to evaluate to a String type, but received null
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$getField": {"field": 1, "input": {}}}}}');
ERROR:  $getField needs 'field' to evaluate to a String type, but received int
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$getField": {"field": [], "input": {}}}}}');
ERROR:  $getField needs 'field' to evaluate to a String type, but received array
-- shorthand expression
-- field must be a string
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$getField": []}}}');
ERROR:  $getField needs 'field' to evaluate to a String type, but received array
-- $unsetField
-- postive cases
-- null input
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": "a", "input": null}}}}');
          bson_dollar_project           
----------------------------------------
 { "result" : { "fieldValue" : null } }
(1 row)

-- empty input
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": "a", "input": {}}}}}');
          bson_dollar_project           
----------------------------------------
 { "result" : { "fieldValue" : {  } } }
(1 row)

-- remove from input argument not current document
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": "a", "input": {"a": 1, "b": 2}}}}}');
                        bson_dollar_project                         
--------------------------------------------------------------------
 { "result" : { "fieldValue" : { "b" : { "$numberInt" : "2" } } } }
(1 row)

-- won't traverse objects automatically with dotted field
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": {"b": 1}, "a.b": 2}', '{"result": { "fieldValue": {"$unsetField": {"field": "a.b", "input": "$$ROOT"}}}}');
                             bson_dollar_project                              
------------------------------------------------------------------------------
 { "result" : { "fieldValue" : { "a" : { "b" : { "$numberInt" : "1" } } } } }
(1 row)

-- field name starts with $
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"$a": 1, "b": 2}', '{"result": { "fieldValue": {"$unsetField": {"field": { "$const": "$a" }, "input": "$$ROOT"}}}}');
                        bson_dollar_project                         
--------------------------------------------------------------------
 { "result" : { "fieldValue" : { "b" : { "$numberInt" : "2" } } } }
(1 row)

-- take specific path from current document
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": {"b": 1, "c": 2}}', '{"result": { "fieldValue": {"$unsetField": {"field": "b", "input": "$a"}}}}');
                        bson_dollar_project                         
--------------------------------------------------------------------
 { "result" : { "fieldValue" : { "c" : { "$numberInt" : "2" } } } }
(1 row)

-- cooperate with getField
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": {"b": 1, "c": 2}}', '{"result": { "fieldValue": {"$unsetField": {"field": "b", "input": {"$getField": "a"}}}}}');
                        bson_dollar_project                         
--------------------------------------------------------------------
 { "result" : { "fieldValue" : { "c" : { "$numberInt" : "2" } } } }
(1 row)

-- unset an array
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{"a": {"b": 1, "c": 2}, "d": [2, 3]}', '{"result": { "fieldValue": {"$unsetField": {"field": "d", "input": "$$ROOT"}}}}');
                                            bson_dollar_project                                             
------------------------------------------------------------------------------------------------------------
 { "result" : { "fieldValue" : { "a" : { "b" : { "$numberInt" : "1" }, "c" : { "$numberInt" : "2" } } } } }
(1 row)

-- negative cases
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": 1}}}');
ERROR:  Expected 'document' type for $unsetField
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": "a"}}}}');
ERROR:  $unsetField needs the 'input' parameter to be explicitly specified
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"input": null}}}}');
ERROR:  $unsetField cannot proceed unless the 'field' parameter is explicitly defined
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": "a", "input": null, "value": 1}}}}');
ERROR:  $unsetField encountered an unrecognized argument value: value
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": {"$add": [2, 3]}, "input": null}}}}');
ERROR:  The $unsetField needs the 'field' value to be constant, but a non-constant value was provided instead.
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": "$a", "input": null}}}}');
ERROR:  A field path reference is being used here, but it is not permitted in this specific context. Perhaps you intended to use the operators {$literal: '$a'} instead?
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": 5, "input": null}}}}');
ERROR:  Expected 'string' type for $unsetField but found 'int' type
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": ["a"], "input": null}}}}');
ERROR:  The $unsetField needs the 'field' value to be constant, but a non-constant value was provided instead.
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": null, "input": null}}}}');
ERROR:  Expected 'string' type for $unsetField but found 'null' type
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": "a", "input": 3}}}}');
ERROR:  $unsetField needs 'input' to evaluate as an Object type
SELECT * FROM documentdb_api_catalog.bson_dollar_project('{}', '{"result": { "fieldValue": {"$unsetField": {"field": "a", "input": {"$add": [2, 3]}}}}}');
ERROR:  $unsetField needs 'input' to evaluate as an Object type

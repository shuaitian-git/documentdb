SET search_path TO documentdb_api,documentdb_core,documentdb_api_catalog;
SET documentdb.next_collection_id TO 2100;
SET documentdb.next_collection_index_id TO 2100;
SELECT documentdb_api.create_collection_view('db', '{ "create": "test" }');
NOTICE:  creating collection
         create_collection_view         
----------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'test', '{ "_id": 1, "a": 1, "ttl": 0 }');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "test", "indexes": [ { "key": { "ttl": 1 }, "name": "ttlIndex", "expireAfterSeconds": 300 } ] }', TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

-- set the default transaction mode.
set default_transaction_read_only = on;
-- should fail gracefully.
SELECT documentdb_api.create_collection_view('db', '{ "create": "collection" }');
ERROR:  Write operations cannot be performed because the server is currently operating in a read-only mode.
DETAIL:  the default transaction is read-only
SELECT documentdb_api.insert('db', '{ "insert": "test", "documents": [ { "a": 1 }] }');
ERROR:  Write operations cannot be performed because the server is currently operating in a read-only mode.
DETAIL:  the default transaction is read-only
SELECT documentdb_api.update('db', '{ "update": "test", "updates": [ { "q": { "a": 1 }, "u": { "$set": { "b": 1 }} }] }');
ERROR:  Write operations cannot be performed because the server is currently operating in a read-only mode.
DETAIL:  the default transaction is read-only
SELECT documentdb_api.delete('db', '{ "delete": "test", "deletes": [ { "q": { "a": 1 } }] }');
ERROR:  Write operations cannot be performed because the server is currently operating in a read-only mode.
DETAIL:  the default transaction is read-only
SELECT document FROM  documentdb_api_catalog.bson_aggregation_pipeline('db', '{ "aggregate": "test", "pipeline": [ { "$merge": { "into": "test" } } ] }');
ERROR:  Write operations cannot be performed because the server is currently operating in a read-only mode.
DETAIL:  the default transaction is read-only
SELECT documentdb_api.drop_collection('db', 'collection');
ERROR:  Write operations cannot be performed because the server is currently operating in a read-only mode.
DETAIL:  the default transaction is read-only
-- same command works when transaction explicitly read-write.
BEGIN;
SET TRANSACTION READ WRITE;
SELECT documentdb_api.create_collection_view('db', '{ "create": "collection" }');
NOTICE:  creating collection
         create_collection_view         
----------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert('db', '{ "insert": "collection", "documents": [ { "a": 1 }] }');
                                         insert                                         
----------------------------------------------------------------------------------------
 ("{ ""n"" : { ""$numberInt"" : ""1"" }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.update('db', '{ "update": "collection", "updates": [ { "q": { "a": 1 }, "u": { "$set": { "b": 1 }} }] }');
                                                               update                                                               
------------------------------------------------------------------------------------------------------------------------------------
 ("{ ""ok"" : { ""$numberDouble"" : ""1.0"" }, ""nModified"" : { ""$numberInt"" : ""1"" }, ""n"" : { ""$numberInt"" : ""1"" } }",t)
(1 row)

SELECT documentdb_api.delete('db', '{ "delete": "collection", "deletes": [ { "q": { "a": 1 }, "limit": 1 }] }');
                                         delete                                         
----------------------------------------------------------------------------------------
 ("{ ""n"" : { ""$numberInt"" : ""1"" }, ""ok"" : { ""$numberDouble"" : ""1.0"" } }",t)
(1 row)

SELECT documentdb_api.drop_collection('db', 'collection');
 drop_collection 
-----------------
 t
(1 row)

ROLLBACK;
-- fails gracefully when transaction is read-only.
CALL documentdb_api_internal.delete_expired_rows();
INFO:  TTL job skipping because transaction is read-only.
set documentdb.enableTTLJobsOnReadOnly to on;
CALL documentdb_api_internal.delete_expired_rows();

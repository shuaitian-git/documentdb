SET search_path TO documentdb_core,documentdb_api,documentdb_api_catalog,documentdb_api_internal;
SET citus.next_shard_id TO 50100;
SET documentdb.next_collection_id TO 5010;
SET documentdb.next_collection_index_id TO 5010;
SELECT documentdb_api.insert_one('db','bson_index_rum_index_scan_to_bitmap_heap_scan',' { "_id" : 1, "order_id" : "ORD1", "price" : 12, "quantity" : 2 }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','bson_index_rum_index_scan_to_bitmap_heap_scan','{ "_id" : 2, "order_id" : "ORD1", "fruit" : "apple", "price" : 20, "quantity" : 1 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','bson_index_rum_index_scan_to_bitmap_heap_scan',' { "_id" : 3, "order_id" : "ORD1", "fruit" : "banana", "price" : 10, "quantity" : 5 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','bson_index_rum_index_scan_to_bitmap_heap_scan',' { "_id" : 4, "order_id" : "ORD1", "fruit" : ["orange", "banana", "apple"], "price" : 10, "quantity" : 5 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

do $$
begin
for r in 1..500 loop
PERFORM documentdb_api.insert_one('db','bson_index_rum_index_scan_to_bitmap_heap_scan',' { "order_id" : "ORD1", "fruit" : ["orange", "banana", "apple"], "price" : 10, "quantity" : 5 }', NULL);
end loop;
end;
$$;
SELECT documentdb_distributed_test_helpers.drop_primary_key('db','bson_index_rum_index_scan_to_bitmap_heap_scan');
 drop_primary_key 
---------------------------------------------------------------------
 
(1 row)

EXPLAIN(costs off) SELECT count(*) FROM documentdb_api.collection('db', 'bson_index_rum_index_scan_to_bitmap_heap_scan') WHERE document OPERATOR(documentdb_api_catalog.@@) '{"order_id": "ORD1" }'::bson LIMIT 10;
                                                            QUERY PLAN                                                            
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               ->  Aggregate
                     ->  Seq Scan on documents_5010_50100 collection
                           Filter: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD1" }'::documentdb_core.bson)
(9 rows)

SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{"createIndexes": "bson_index_rum_index_scan_to_bitmap_heap_scan", "indexes": [{"key": {"order_id": 1}, "name": "order_id_1"}]}', true);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "0" }, "numIndexesAfter" : { "$numberInt" : "1" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

-- Even if there is an index order_id_1, performs BitmapHeapScan instead of Index Scan 
BEGIN;
set local enable_seqscan TO off;
SET LOCAL documentdb.ForceUseIndexIfAvailable to OFF;
EXPLAIN (COSTS OFF) SELECT count(*) FROM documentdb_api.collection('db', 'bson_index_rum_index_scan_to_bitmap_heap_scan') WHERE document OPERATOR(documentdb_api_catalog.@@) '{"order_id": "ORD1" }'::bson LIMIT 10;
                                                                 QUERY PLAN                                                                 
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               ->  Aggregate
                     ->  Bitmap Heap Scan on documents_5010_50100 collection
                           Recheck Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD1" }'::documentdb_core.bson)
                           ->  Bitmap Index Scan on order_id_1
                                 Index Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD1" }'::documentdb_core.bson)
(11 rows)

END;
-- Tets for paralell BitmapHeapScan. Needs all the 5 config and at 500 docs in the collection to enable parallel bitmap scan.
BEGIN;
set local parallel_tuple_cost TO 0.00001;
set local parallel_setup_cost TO 0;
set local min_parallel_table_scan_size TO 0;
set local min_parallel_index_scan_size TO 0;
SET local enable_seqscan to OFF;
SET LOCAL documentdb.ForceUseIndexIfAvailable to OFF;
EXPLAIN (COSTS OFF) WITH t1 as (SELECT document FROM documentdb_api.collection('db', 'bson_index_rum_index_scan_to_bitmap_heap_scan') WHERE document OPERATOR(documentdb_api_catalog.@@) '{"order_id": "ORD2" , "$and": [{"timestamp" : { "$lte":2000000}}]}'::bson  ) SELECT bson_repath_and_build('rxCount'::text, BSONAVERAGE(document -> 'month')) from t1 group by bson_expression_get(document, '{ "": "$product_name" }');
                                                                           QUERY PLAN                                                                           
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  GroupAggregate
               Group Key: (documentdb_api_catalog.bson_expression_get(collection.document, '{ "" : "$product_name" }'::documentdb_core.bson, false))
               ->  Gather Merge
                     Workers Planned: 2
                     ->  Sort
                           Sort Key: (documentdb_api_catalog.bson_expression_get(collection.document, '{ "" : "$product_name" }'::documentdb_core.bson, false))
                           ->  Parallel Bitmap Heap Scan on documents_5010_50100 collection
                                 Recheck Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD2" }'::documentdb_core.bson)
                                 Filter: (document OPERATOR(documentdb_api_catalog.@<=) '{ "timestamp" : { "$numberInt" : "2000000" } }'::documentdb_core.bson)
                                 ->  Bitmap Index Scan on order_id_1
                                       Index Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD2" }'::documentdb_core.bson)
(16 rows)

ROLLBACK;
-- IndexScan is overritten by BitmapHeapScan when documentdb_api.forceRumIndexScantoBitmapHeapScan is toggled to off and then to on
BEGIN;
set local enable_seqscan TO off;
set local documentdb.forceRumIndexScantoBitmapHeapScan TO OFF;
set local documentdb.forceRumIndexScantoBitmapHeapScan TO true;
SET LOCAL documentdb.ForceUseIndexIfAvailable to OFF;
EXPLAIN (COSTS OFF) SELECT count(*) FROM documentdb_api.collection('db', 'bson_index_rum_index_scan_to_bitmap_heap_scan') WHERE document OPERATOR(documentdb_api_catalog.@@) '{"order_id": "ORD1" }'::bson LIMIT 10;
                                                                 QUERY PLAN                                                                 
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               ->  Aggregate
                     ->  Bitmap Heap Scan on documents_5010_50100 collection
                           Recheck Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD1" }'::documentdb_core.bson)
                           ->  Bitmap Index Scan on order_id_1
                                 Index Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD1" }'::documentdb_core.bson)
(11 rows)

END;
-- IndexScan is preferred when is turned off via setting documentdb_api.forceRumIndexScantoBitmapHeapScan TO off
BEGIN;
set local enable_seqscan TO off;
set local documentdb.forceRumIndexScantoBitmapHeapScan TO off;
set local enable_bitmapscan TO OFF;
SET LOCAL documentdb.ForceUseIndexIfAvailable to OFF;
EXPLAIN (COSTS OFF) SELECT count(*) FROM documentdb_api.collection('db', 'bson_index_rum_index_scan_to_bitmap_heap_scan') WHERE document OPERATOR(documentdb_api_catalog.@@) '{"order_id": "ORD1" }'::bson LIMIT 10;
                                                              QUERY PLAN                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               ->  Aggregate
                     ->  Index Scan using order_id_1 on documents_5010_50100 collection
                           Index Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD1" }'::documentdb_core.bson)
(9 rows)

END;
-- IndexScan is preferred when is turned off via setting documentdb_api.forceRumIndexScantoBitmapHeapScan TO "off"
BEGIN;
set local enable_seqscan TO off;
set local documentdb.forceRumIndexScantoBitmapHeapScan TO off;
set local enable_bitmapscan TO OFF;
SET LOCAL documentdb.ForceUseIndexIfAvailable to OFF;
EXPLAIN (COSTS OFF) SELECT count(*) FROM documentdb_api.collection('db', 'bson_index_rum_index_scan_to_bitmap_heap_scan') WHERE document OPERATOR(documentdb_api_catalog.@@) '{"order_id": "ORD1" }'::bson LIMIT 10;
                                                              QUERY PLAN                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               ->  Aggregate
                     ->  Index Scan using order_id_1 on documents_5010_50100 collection
                           Index Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD1" }'::documentdb_core.bson)
(9 rows)

END;
-- IndexScan is preferred when is turned off via setting documentdb_api.forceRumIndexScantoBitmapHeapScan TO false
BEGIN;
set local enable_seqscan TO off;
set local documentdb.forceRumIndexScantoBitmapHeapScan TO false;
set local enable_bitmapscan TO OFF;
SET LOCAL documentdb.ForceUseIndexIfAvailable to OFF;
EXPLAIN (COSTS OFF) SELECT count(*) FROM documentdb_api.collection('db', 'bson_index_rum_index_scan_to_bitmap_heap_scan') WHERE document OPERATOR(documentdb_api_catalog.@@) '{"order_id": "ORD1" }'::bson LIMIT 10;
                                                              QUERY PLAN                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               ->  Aggregate
                     ->  Index Scan using order_id_1 on documents_5010_50100 collection
                           Index Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD1" }'::documentdb_core.bson)
(9 rows)

END;
-- IndexScan is preferred when is turned off via setting documentdb_api.forceRumIndexScantoBitmapHeapScan TO "false"
BEGIN;
set local enable_seqscan TO off;
set local documentdb.forceRumIndexScantoBitmapHeapScan TO "false";
set local enable_bitmapscan TO OFF;
SET LOCAL documentdb.ForceUseIndexIfAvailable to OFF;
EXPLAIN (COSTS OFF) SELECT count(*) FROM documentdb_api.collection('db', 'bson_index_rum_index_scan_to_bitmap_heap_scan') WHERE document OPERATOR(documentdb_api_catalog.@@) '{"order_id": "ORD1" }'::bson LIMIT 10;
                                                              QUERY PLAN                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               ->  Aggregate
                     ->  Index Scan using order_id_1 on documents_5010_50100 collection
                           Index Cond: (document OPERATOR(documentdb_api_catalog.@=) '{ "order_id" : "ORD1" }'::documentdb_core.bson)
(9 rows)

END;

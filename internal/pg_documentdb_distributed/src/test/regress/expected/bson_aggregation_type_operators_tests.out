SET search_path TO documentdb_core,documentdb_api,documentdb_api_catalog,documentdb_api_internal;
SET citus.next_shard_id TO 6910000;
SET documentdb.next_collection_id TO 69100;
SET documentdb.next_collection_index_id TO 69100;
-- $isNumber: return true for numbers false otherwise
SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": [["not null"]]}}');
 bson_dollar_project  
---------------------------------------------------------------------
 { "result" : false }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": {"$add": [1, 2]}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : true }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": [true]}}');
 bson_dollar_project  
---------------------------------------------------------------------
 { "result" : false }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": [false]}}');
 bson_dollar_project  
---------------------------------------------------------------------
 { "result" : false }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": "1"}}');
 bson_dollar_project  
---------------------------------------------------------------------
 { "result" : false }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": {"$numberLong": "1"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : true }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": {"$numberDecimal": "1"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : true }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": {"$numberDouble": "1.0"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : true }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": {}}}');
 bson_dollar_project  
---------------------------------------------------------------------
 { "result" : false }
(1 row)

-- $isNumber: returns null with null or undefined
SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": null}}');
 bson_dollar_project  
---------------------------------------------------------------------
 { "result" : false }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": "$a"}}');
 bson_dollar_project  
---------------------------------------------------------------------
 { "result" : false }
(1 row)

-- $isNumber: error number of args should be 1
SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": []}}');
ERROR:  The expression $isNumber requires exactly 1 arguments, but 0 arguments were actually provided.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": [1, 2]}}');
ERROR:  The expression $isNumber requires exactly 1 arguments, but 2 arguments were actually provided.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$isNumber": [[], 2]}}');
ERROR:  The expression $isNumber requires exactly 1 arguments, but 2 arguments were actually provided.
-- $type: returns expected type
SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "1", "value": {"$numberDouble": "1.0"}, "expected": "double"}');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "2", "value": "string", "expected": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "3", "value": {}, "expected": "object"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "4", "value": [], "expected": "array"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "5", "value": {"$binary": { "base64": "bGlnaHQgdw==", "subType": "01"}}, "expected": "binData"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "6", "value": {"$oid" : "639926cee6bda3127f153bf1" }, "expected": "objectId"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "7", "value": true, "expected": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "8", "value": {"$date": "2022-01-01T00:00:00.000Z"}, "expected": "date"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "9", "value": null, "expected": "null"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "10", "value": { "$regex": "a.*b", "$options": "" }, "expected": "regex"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "11", "value": { "$code": "var a = 1;"}, "expected": "javascript"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "12", "value": 1, "expected": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "13", "value": {"$timestamp" : { "t": 1670981326, "i": 1 }}, "expected": "timestamp"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "14", "value": {"$numberLong" : "1"}, "expected": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "15", "value": {"$numberDecimal" : "1"}, "expected": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "16", "value": {"$minKey" : 1}, "expected": "minKey"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "17", "value": {"$maxKey" : 1}, "expected": "maxKey"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'dollarType', '{"_id": "18", "expected": "missing"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT bson_dollar_project(document, '{"output": {"$type": "$value"}, "expected": 1}') FROM documentdb_api.collection('db', 'dollarType');
                         bson_dollar_project                          
---------------------------------------------------------------------
 { "_id" : "1", "expected" : "double", "output" : "double" }
 { "_id" : "2", "expected" : "string", "output" : "string" }
 { "_id" : "3", "expected" : "object", "output" : "object" }
 { "_id" : "4", "expected" : "array", "output" : "array" }
 { "_id" : "5", "expected" : "binData", "output" : "binData" }
 { "_id" : "6", "expected" : "objectId", "output" : "objectId" }
 { "_id" : "7", "expected" : "bool", "output" : "bool" }
 { "_id" : "8", "expected" : "date", "output" : "date" }
 { "_id" : "9", "expected" : "null", "output" : "null" }
 { "_id" : "10", "expected" : "regex", "output" : "regex" }
 { "_id" : "11", "expected" : "javascript", "output" : "javascript" }
 { "_id" : "12", "expected" : "int", "output" : "int" }
 { "_id" : "13", "expected" : "timestamp", "output" : "timestamp" }
 { "_id" : "14", "expected" : "long", "output" : "long" }
 { "_id" : "15", "expected" : "decimal", "output" : "decimal" }
 { "_id" : "16", "expected" : "minKey", "output" : "minKey" }
 { "_id" : "17", "expected" : "maxKey", "output" : "maxKey" }
 { "_id" : "18", "expected" : "missing", "output" : "missing" }
(18 rows)

-- $convert: returns expected values
-- double value
SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "1", "value": {"$numberDouble": "1.3"}, "expected": {"$numberDouble": "1.3"}, "convertTo": "double"}');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "2", "value": {"$numberDouble": "1.3"}, "expected": "1.3", "convertTo": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "3", "value": {"$numberDouble": "1.3"}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "4", "value": {"$numberDouble": "0.0"}, "expected": false, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "5", "value": {"$numberDouble": "-0.1"}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "6", "value": {"$numberDouble": "1.3"}, "expected": {"$date": "1970-01-01T00:00:00.001Z"}, "convertTo": "date"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "7", "value": {"$numberDouble": "1.3"}, "expected": 1, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "8", "value": {"$numberDouble": "1.3"}, "expected": {"$numberLong": "1"}, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "9", "value": {"$numberDouble": "1.3"}, "expected": {"$numberDecimal": "1.3"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- str value
SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "10", "value": "myString", "expected": "myString", "convertTo": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "11", "value": "1.3", "expected": {"$numberDouble": "1.3"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "12", "value": "1E-2", "expected": {"$numberDouble": "0.01"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "13", "value": "13423423E-25", "expected": {"$numberDouble": "1.3423423e-18"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "14", "value": "0000000.0000000", "expected": {"$numberDouble": "0.0"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "15", "value": "1.3", "expected": {"$numberDecimal": "1.3"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "16", "value": "1E-2", "expected": {"$numberDecimal": "0.01"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "17", "value": "-13423423E25", "expected": {"$numberDecimal": "-1.3423423E+32"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "18", "value": "000000.000000", "expected": {"$numberDecimal": "0.000000"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "19", "value": "-1232", "expected": {"$numberLong": "-1232"}, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "20", "value": "00053235", "expected": {"$numberLong": "53235"}, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "21", "value": "00053235", "expected": 53235, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "22", "value": "00000000000", "expected": 0, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "23", "value": "665a1c0f8a2b4f7cd317a2b4", "expected": {"$oid": "665a1c0f8a2b4f7cd317a2b4"}, "convertTo": "objectId"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "24", "value": "", "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- objectId value
SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "26", "value": {"$oid": "665a1c0f8a2b4f7cd317a2b4"}, "expected": {"$oid": "665a1c0f8a2b4f7cd317a2b4"}, "convertTo": "objectId"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "27", "value": {"$oid": "665a1c0f8a2b4f7cd317a2b4"}, "expected": "665a1c0f8a2b4f7cd317a2b4", "convertTo": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "28", "value": {"$oid": "665a1c0f8a2b4f7cd317a2b4"}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "29", "value": {"$oid": "665a1c0f8a2b4f7cd317a2b4"}, "expected": {"$date": "2024-05-31T18:50:55.000Z"}, "convertTo": "date"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- bool value
SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "30", "value": false, "expected": {"$numberDouble": "0"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "31", "value": true, "expected": {"$numberDouble": "1"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "32", "value": false, "expected": {"$numberDecimal": "0"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "33", "value": true, "expected": {"$numberDecimal": "1"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "34", "value": false, "expected": {"$numberLong": "0"}, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "35", "value": true, "expected": {"$numberLong": "1"}, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "36", "value": false, "expected": 0, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "37", "value": true, "expected": 1, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "38", "value": false, "expected": "false", "convertTo": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "39", "value": true, "expected": "true", "convertTo": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "40", "value": false, "expected": false, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "45", "value": true, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- date value
SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "46", "value": {"$date": "2024-05-31T18:50:55.000Z"}, "expected": {"$date": "2024-05-31T18:50:55.000Z"}, "convertTo": "date"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "47", "value": {"$date": "2024-05-31T18:50:55.000Z"}, "expected": "2024-05-31T18:50:55.000Z", "convertTo": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "48", "value": {"$date": "2024-05-31T18:50:55.000Z"}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "49", "value": {"$date": "2024-05-31T18:50:55.000Z"}, "expected": {"$numberLong": "1717181455000"}, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "50", "value": {"$date": "2024-05-31T18:50:55.000Z"}, "expected": {"$numberDouble": "1717181455000"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "51", "value": {"$date": "2024-05-31T18:50:55.000Z"}, "expected": {"$numberDecimal": "1717181455000"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- int value
SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "52", "value": 1, "expected": 1, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "53", "value": 1, "expected": {"$numberDouble": "1"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "54", "value": -11, "expected": {"$numberDouble": "-11"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "55", "value": 523453, "expected": {"$numberDecimal": "523453"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "56", "value": 523453, "expected": {"$numberLong": "523453"}, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "57", "value": 1, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "58", "value": 0, "expected": false, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "59", "value": 25, "expected": "25", "convertTo": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- long value
SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "61", "value": {"$numberLong": "1" }, "expected": {"$numberLong": "1" }, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "62", "value": {"$numberLong": "1" }, "expected": 1, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "63", "value": {"$numberLong": "1" }, "expected": {"$numberDouble": "1"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "64", "value": {"$numberLong": "-11" }, "expected": {"$numberDouble": "-11"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "65", "value": {"$numberLong": "523453" }, "expected": {"$numberDecimal": "523453"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "66", "value": {"$numberLong": "523453" }, "expected": {"$numberLong": "523453"}, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "67", "value": {"$numberLong": "1" }, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "68", "value": {"$numberLong": "0" }, "expected": false, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "69", "value": {"$numberLong": "25" }, "expected": "25", "convertTo": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "70", "value": {"$numberLong": "25" }, "expected": {"$date": "1970-01-01T00:00:00.025Z"}, "convertTo": "date"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- decimal value
SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "71", "value": {"$numberDecimal": "1.3"}, "expected": {"$numberDecimal": "1.3"}, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "72", "value": {"$numberDecimal": "1.3"}, "expected": "1.3", "convertTo": "string"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "73", "value": {"$numberDecimal": "1.3"}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "74", "value": {"$numberDecimal": "0.0"}, "expected": false, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "75", "value": {"$numberDecimal": "-0.1"}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "76", "value": {"$numberDecimal": "1.3"}, "expected": {"$date": "1970-01-01T00:00:00.001Z"}, "convertTo": "date"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "77", "value": {"$numberDecimal": "1.3"}, "expected": 1, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "78", "value": {"$numberDecimal": "1.3"}, "expected": {"$numberLong": "1"}, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "79", "value": {"$numberDecimal": "1.3"}, "expected": {"$numberDouble": "1.3"}, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- other supported types to bool
SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "80", "value": {"$minKey": 1}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "81", "value": {"foo": 1}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "82", "value": ["foo", 1], "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "83", "value": {"$binary": { "base64": "bGlnaHQgdw==", "subType": "01"}}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "84", "value": { "$regex": "a.*b", "$options": "" }, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "85", "value": { "$code": "var a = 1;"}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "86", "value": {"$maxKey": 1}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "87", "value": {"$timestamp" : { "t": 1670981326, "i": 1 }}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "88", "value": { "$dbPointer" : { "$ref" : "db.test", "$id" : { "$oid" : "347f000000c1de008ec19ceb" }}}, "expected": true, "convertTo": "bool"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- str to date is not yet supported, will be added with $dateFromString
-- SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "89", "value": "2024-05-31", "expected": {"$date": "2024-05-31T00:00:00.001Z"}, "convertTo": "date"}');
-- SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "90", "value": "2024-05-31T00:00:00.001Z", "expected": {"$date": "2024-05-31T00:00:00.001Z"}, "convertTo": "date"}');
-- SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "91", "value": "2024-05-31T00:00:00.001+0500", "expected": {"$date": "1969-12-31T19:00:00.001Z"}, "convertTo": "date"}');
-- SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "92", "value": "2024-05-31 00:00:00.001 +0500", "expected": {"$date": "1969-12-31T19:00:00.001Z"}, "convertTo": "date"}');
-- SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "93", "value": "2024-05-31T00:00:00.001+5", "expected": {"$date": "1969-12-31T19:00:00.001Z"}, "convertTo": "date"}');
-- SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "94", "value": "2024-05-31T00:00:00.001+05", "expected": {"$date": "1969-12-31T19:00:00.001Z"}, "convertTo": "date"}');
-- SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "95", "value": "2024-05-31T00:00:00.001+050", "expected": {"$date": "1969-12-31T23:10:00.001Z"}, "convertTo": "date"}');
-- SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "96", "value": "2024-05-31T00:00:00.001+0510", "expected": {"$date": "1969-12-31T18:50:00.001Z"}, "convertTo": "date"}');
-- SELECT * from documentdb_api.insert_one('db', 'convertColl', '{"_id": "97", "value": "2024-05-31T00:00:00.001+0501", "expected": {"$date": "1969-12-31T18:59:00.001Z"}, "convertTo": "date"}');
-- call convert with the value and convertTo and check if the output is equal to the expected output.
SELECT bson_dollar_project(document, '{"result": { "$eq": [{"$convert": { "input": "$value", "to": "$convertTo"}}, "$expected"]}}') FROM documentdb_api.collection('db', 'convertColl');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
 { "_id" : "2", "result" : true }
 { "_id" : "3", "result" : true }
 { "_id" : "4", "result" : true }
 { "_id" : "5", "result" : true }
 { "_id" : "6", "result" : true }
 { "_id" : "7", "result" : true }
 { "_id" : "8", "result" : true }
 { "_id" : "9", "result" : true }
 { "_id" : "10", "result" : true }
 { "_id" : "11", "result" : true }
 { "_id" : "12", "result" : true }
 { "_id" : "13", "result" : true }
 { "_id" : "14", "result" : true }
 { "_id" : "15", "result" : true }
 { "_id" : "16", "result" : true }
 { "_id" : "17", "result" : true }
 { "_id" : "18", "result" : true }
 { "_id" : "19", "result" : true }
 { "_id" : "20", "result" : true }
 { "_id" : "21", "result" : true }
 { "_id" : "22", "result" : true }
 { "_id" : "23", "result" : true }
 { "_id" : "24", "result" : true }
 { "_id" : "26", "result" : true }
 { "_id" : "27", "result" : true }
 { "_id" : "28", "result" : true }
 { "_id" : "29", "result" : true }
 { "_id" : "30", "result" : true }
 { "_id" : "31", "result" : true }
 { "_id" : "32", "result" : true }
 { "_id" : "33", "result" : true }
 { "_id" : "34", "result" : true }
 { "_id" : "35", "result" : true }
 { "_id" : "36", "result" : true }
 { "_id" : "37", "result" : true }
 { "_id" : "38", "result" : true }
 { "_id" : "39", "result" : true }
 { "_id" : "40", "result" : true }
 { "_id" : "45", "result" : true }
 { "_id" : "46", "result" : true }
 { "_id" : "47", "result" : true }
 { "_id" : "48", "result" : true }
 { "_id" : "49", "result" : true }
 { "_id" : "50", "result" : true }
 { "_id" : "51", "result" : true }
 { "_id" : "52", "result" : true }
 { "_id" : "53", "result" : true }
 { "_id" : "54", "result" : true }
 { "_id" : "55", "result" : true }
 { "_id" : "56", "result" : true }
 { "_id" : "57", "result" : true }
 { "_id" : "58", "result" : true }
 { "_id" : "59", "result" : true }
 { "_id" : "61", "result" : true }
 { "_id" : "62", "result" : true }
 { "_id" : "63", "result" : true }
 { "_id" : "64", "result" : true }
 { "_id" : "65", "result" : true }
 { "_id" : "66", "result" : true }
 { "_id" : "67", "result" : true }
 { "_id" : "68", "result" : true }
 { "_id" : "69", "result" : true }
 { "_id" : "70", "result" : true }
 { "_id" : "71", "result" : true }
 { "_id" : "72", "result" : true }
 { "_id" : "73", "result" : true }
 { "_id" : "74", "result" : true }
 { "_id" : "75", "result" : true }
 { "_id" : "76", "result" : true }
 { "_id" : "77", "result" : true }
 { "_id" : "78", "result" : true }
 { "_id" : "79", "result" : true }
 { "_id" : "80", "result" : true }
 { "_id" : "81", "result" : true }
 { "_id" : "82", "result" : true }
 { "_id" : "83", "result" : true }
 { "_id" : "84", "result" : true }
 { "_id" : "85", "result" : true }
 { "_id" : "86", "result" : true }
 { "_id" : "87", "result" : true }
 { "_id" : "88", "result" : true }
(82 rows)

-- $convert to BinData
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "SGVsbG8gd29ybGQh", "to": "binData", "format": "base64"}}}');
                                bson_dollar_project                                 
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "SGVsbG8gd29ybGQh", "subType" : "00" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "RG9jdW1lbnREQiBpcyBjb29sbGwh", "to": {"type": "binData", "subtype": 8}, "format": "base64"}}}');
                                      bson_dollar_project                                       
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "RG9jdW1lbnREQiBpcyBjb29sbGwh", "subType" : "08" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "SGVsbG8gd29ybGQh", "to": {"type": "binData", "subtype": 0}, "format": "base64"}}}');
                                bson_dollar_project                                 
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "SGVsbG8gd29ybGQh", "subType" : "00" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "RG9jdW1lbnREQiBpcyBjb29sbGwh", "to": {"type": "binData", "subtype": 0}, "format": "base64url"}}}');
                                      bson_dollar_project                                       
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "RG9jdW1lbnREQiBpcyBjb29sbGwh", "subType" : "00" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "UEdNb25nbyBpcyBHQSE", "to": {"type": "binData", "subtype": 0}, "format": "base64url"}}}');
                                  bson_dollar_project                                   
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "UEdNb25nbyBpcyBHQSE=", "subType" : "00" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "SGVsbG8gd29ybGQh", "to": {"type": "binData", "subtype": 0}, "format": "base64url"}}}');
                                bson_dollar_project                                 
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "SGVsbG8gd29ybGQh", "subType" : "00" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "10000000-1000-1000-1000-100000000000", "to": {"type": "binData", "subtype": 4}, "format": "uuid"}}}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "EAAAABAAEAAQABAAAAAAAA==", "subType" : "04" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "451e4567-e89b-42d3-a456-556642440000", "to": {"type": "binData", "subtype": 4}, "format": "uuid"}}}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "RR5FZ+ibQtOkVlVmQkQAAA==", "subType" : "04" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "4a6f686e20446f65", "to": {"type": "binData", "subtype": 0}, "format": "hex"}}}');
                              bson_dollar_project                               
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "Sm9obiBEb2U=", "subType" : "00" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "4a6f686e20446f65", "to": {"type": "binData", "subtype": 5}, "format": "hex"}}}');
                              bson_dollar_project                               
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "Sm9obiBEb2U=", "subType" : "05" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "4a6f686e20446f65", "to": {"type": "binData", "subtype": 6}, "format": "hex"}}}');
                              bson_dollar_project                               
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "Sm9obiBEb2U=", "subType" : "06" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "a27", "to": {"type": "binData", "subtype": 0}, "format": "utf8"}}}');
                          bson_dollar_project                           
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "YTI3", "subType" : "00" } } }
(1 row)

SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "UEdNb25nbyBpcyBHQSE=", "to": {"type": "binData"}, "format": "utf8"}}}');
                                      bson_dollar_project                                       
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "VUVkTmIyNW5ieUJwY3lCSFFTRT0=", "subType" : "00" } } }
(1 row)

SELECT * from bson_dollar_project('{"i": "167dee52-c331-484e-92d1-c56479b8e670"}', '{"result": {"$convert": { "input": "$i", "to": {"type": "binData", "subtype": 4}, "format": "uuid"}}}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "Fn3uUsMxSE6S0cVkebjmcA==", "subType" : "04" } } }
(1 row)

SELECT * from bson_dollar_project('{"i": "SGVsbG8gd29ybGQh", "ts": 0 }', '{"result": {"$convert": { "input": "$i", "to": {"type": "binData", "subtype": "$ts"}, "format": "base64"}}}');
                                bson_dollar_project                                 
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "SGVsbG8gd29ybGQh", "subType" : "00" } } }
(1 row)

SELECT * from bson_dollar_project('{"tt": "binData", "f": "hex"}', '{"result": {"$convert": { "input": "4a6f686e20446f65", "to": {"type": "$tt", "subtype": 0}, "format": "$f"}}}');
                              bson_dollar_project                               
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "Sm9obiBEb2U=", "subType" : "00" } } }
(1 row)

-- error: $convert to BinData with no format
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "SGVsbG8gd29ybGQh", "to": "binData"}}}');
ERROR:  A specific format must be provided when attempting to convert from string into 'binData'.
-- error: $convert to BinData with non-string input
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": 123, "to": "binData", "format": "base64"}}}');
ERROR:  Unsupported conversion from int to binData in $convert with no onError value
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": false, "to": "binData", "format": "base64"}}}');
ERROR:  Unsupported conversion from bool to binData in $convert with no onError value
-- error: uuid format and uuid subtype violations
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "SGVsbG8gd29ybGQh", "to": {"type": "binData", "subtype": 4}, "format": "base64"}}}');
ERROR:  Unable to interpret BinData 'SGVsbG8gd29ybGQh' during $convert operation due to missing onError parameter: Only the UUID subtype (4) is allowed with the 'uuid' format
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "451e4567-e89b-42d3-a456-556642440000", "to": {"type": "binData"}, "format": "uuid"}}}');
ERROR:  Unable to interpret BinData '451e4567-e89b-42d3-a456-556642440000' during $convert operation due to missing onError parameter: Only the UUID subtype (4) is allowed with the 'uuid' format
-- error: $convert to BinData with input-format mismatch
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "123", "to": "binData", "format": "base64"}}}');
ERROR:  Unable to interpret BinData '123' during $convert operation due to missing onError parameter: The provided input does not represent a valid base64-encoded string.
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "hn3uUsMxSE6S0cVkebjm=fg==", "to": {"type": "binData", "subtype": 4}, "format": "base64"}}}');
ERROR:  Unable to interpret BinData 'hn3uUsMxSE6S0cVkebjm=fg==' during $convert operation due to missing onError parameter: Only the UUID subtype (4) is allowed with the 'uuid' format
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "451e4567-e89b-42d3-a456-556642440000", "to": {"type": "binData", "subtype": 0}, "format": "base64"}}}');
ERROR:  Unable to interpret BinData '451e4567-e89b-42d3-a456-556642440000' during $convert operation due to missing onError parameter: The provided input does not represent a valid base64-encoded string.
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "hn3u+UsMxSE6S0cVkebjmfg==", "to": {"type": "binData", "subtype": 0}, "format": "base64url"}}}');
ERROR:  Unable to interpret BinData 'hn3u+UsMxSE6S0cVkebjmfg==' during $convert operation due to missing onError parameter: The provided input does not represent a valid base64-encoded string.
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "hn3u+UsMxSE6S0cVkebjm/fg==", "to": {"type": "binData", "subtype": 0}, "format": "base64url"}}}');
ERROR:  Unable to interpret BinData 'hn3u+UsMxSE6S0cVkebjm/fg==' during $convert operation due to missing onError parameter: The provided input does not represent a valid base64-encoded string.
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "äöäöä", "to": {"type": "binData", "subtype": 4}, "format": "uuid"}}}');
ERROR:  Unable to interpret BinData 'äöäöä' during $convert operation due to missing onError parameter: The provided input does not represent a properly formatted UUID string %s.
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "SGVsbG8gd29ybGQh", "to": {"type": "binData", "subtype": 4}, "format": "uuid"}}}');
ERROR:  Unable to interpret BinData 'SGVsbG8gd29ybGQh' during $convert operation due to missing onError parameter: The provided input does not represent a properly formatted UUID string %s.
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "451e4567-e89b-42d3-a456-556642440000", "to": {"type": "binData", "subtype": 4}, "format": "hex"}}}');
ERROR:  Unable to interpret BinData '451e4567-e89b-42d3-a456-556642440000' during $convert operation due to missing onError parameter: Only the UUID subtype (4) is allowed with the 'uuid' format
-- error: auto format not supported for to BinData
SELECT * from bson_dollar_project('{}', '{"result": {"$convert": { "input": "SGVsbG8gd29ybGQh", "to": {"type": "binData", "subtype": 0}, "format": "auto"}}}');
ERROR:  Format 'auto' is not supported for string to 'binData' conversion
-- error: auto format not supported for BinData to string yet
SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "4a6f686e20446f65",
                "to": {"type": "binData", "subtype": 5},
                "format": "hex"
            }
        },
        "to": "string",
        "format": "auto"
    }
}}');
ERROR:  Convert to string from binData with format 'auto' is not supported yet.
 
-- BinData to string using $convert
SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "SGVsbG8gd29ybGQh",
                "to": "binData",
                "format": "base64"
            }
        },
        "to": "string",
        "format": "base64"
    }
}}');
        bson_dollar_project        
---------------------------------------------------------------------
 { "result" : "SGVsbG8gd29ybGQh" }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "SGVsbG8gd29ybGQh",
                "to": "binData",
                "format": "base64"
            }
        },
        "to": "string",
        "format": "utf8"
    }
}}');
      bson_dollar_project      
---------------------------------------------------------------------
 { "result" : "Hello world!" }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "💻🤠🔫",
                "to": "binData",
                "format": "utf8"
            }
        },
        "to": "string",
        "format": "utf8"
    }
}}');
   bson_dollar_project   
---------------------------------------------------------------------
 { "result" : "💻🤠🔫" }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "SGVsbG8gd29ybGQh",
                "to": "binData",
                "format": "base64"
            }
        },
        "to": "string",
        "format": "base64url"
    }
}}');
        bson_dollar_project        
---------------------------------------------------------------------
 { "result" : "SGVsbG8gd29ybGQh" }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "167dee52-c331-484e-92d1-c56479b8e670",
                "to": {"type": "binData", "subtype": 4},
                "format": "uuid"
            }
        },
        "to": "string",
        "format": "uuid"
    }
}}');
                  bson_dollar_project                  
---------------------------------------------------------------------
 { "result" : "167dee52-c331-484e-92d1-c56479b8e670" }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "SGVsbG8gd29ybGQh",
                "to": "binData",
                "format": "base64"
            }
        },
        "to": "string",
        "format": "hex"
    }
}}');
            bson_dollar_project            
---------------------------------------------------------------------
 { "result" : "48656C6C6F20776F726C6421" }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "10000000-1000-1000-1000-100000000000",
                "to": {"type": "binData", "subtype": 4},
                "format": "uuid"
            }
        },
        "to": "string",
        "format": "uuid"
    }
}}');
                  bson_dollar_project                  
---------------------------------------------------------------------
 { "result" : "10000000-1000-1000-1000-100000000000" }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "4a6f686e20446f65",
                "to": "binData",
                "format": "hex"
            }
        },
        "to": "string",
        "format": "hex"
    }
}}');
        bson_dollar_project        
---------------------------------------------------------------------
 { "result" : "4A6F686E20446F65" }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "4a6f686e20446f65",
                "to": {"type": "binData", "subtype": 5},
                "format": "hex"
            }
        },
        "to": "string",
        "format": "hex"
    }
}}');
        bson_dollar_project        
---------------------------------------------------------------------
 { "result" : "4A6F686E20446F65" }
(1 row)

SELECT * FROM bson_dollar_project('{"i": "a27", "tt": "binData", "f": "hex"}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "$i",
                "to": {"type": "$tt", "subtype": 0},
                "format": "$f"
            }
        },
        "to": "string",
        "format": "$f"
    }
}}');
ERROR:  invalid hexadecimal data: odd number of digits
SELECT * FROM bson_dollar_project('{"i": "167dee52-c331-484e-92d1-c56479b8e670"}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "$i",
                "to": {"type": "binData", "subtype": 4},
                "format": "uuid"
            }
        },
        "to": "string",
        "format": "uuid"
    }
}}');
                  bson_dollar_project                  
---------------------------------------------------------------------
 { "result" : "167dee52-c331-484e-92d1-c56479b8e670" }
(1 row)

-- $convert from BinData to BinData
SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "SGVsbG8gd29ybGQh",
                "to": "binData",
                "format": "base64"
            }
        },
        "to":  {"type": "binData", "subtype": 4}
    }
}}');
                                bson_dollar_project                                 
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "SGVsbG8gd29ybGQh", "subType" : "04" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "💻🤠🔫",
                "to": "binData",
                "format": "utf8"
            }
        },
        "to": {"type": "binData", "subtype": 0}
    }
}}');
                                bson_dollar_project                                 
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "8J+Su/CfpKDwn5Sr", "subType" : "00" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "10000000-1000-1000-1000-100000000000",
                "to": {"type": "binData", "subtype": 4},
                "format": "uuid"
            }
        },
        "to": {"type": "binData", "subtype": 0}
    }
}}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "EAAAABAAEAAQABAAAAAAAA==", "subType" : "00" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "10000000-1000-1000-1000-100000000000",
                "to": {"type": "binData", "subtype": 4},
                "format": "uuid"
            }
        },
        "to": {"type": "binData", "subtype": 4}
    }
}}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "EAAAABAAEAAQABAAAAAAAA==", "subType" : "04" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "4a6f686e20446f65",
                "to": "binData",
                "format": "hex"
            }
        },
        "to": {"type": "binData", "subtype": 130}
    }
}}');
                              bson_dollar_project                               
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "Sm9obiBEb2U=", "subType" : "82" } } }
(1 row)

SELECT * FROM bson_dollar_project('{"i": "SGVsbG8gd29ybGQh", "ts": 0 }', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "$i",
                "to": {"type": "binData", "subtype": "$ts"},
                "format": "utf8"
            }
        },
        "to": {"type": "binData", "subtype": "$ts"}
    }
}}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "U0dWc2JHOGdkMjl5YkdRaA==", "subType" : "00" } } }
(1 row)

SELECT * FROM bson_dollar_project('{"i": "167dee52-c331-484e-92d1-c56479b8e670"}', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "$i",
                "to": {"type": "binData", "subtype": 4},
                "format": "uuid"
            }
        },
        "to": {"type": "binData", "subtype": 4}
    }
}}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "Fn3uUsMxSE6S0cVkebjmcA==", "subType" : "04" } } }
(1 row)

SELECT * FROM bson_dollar_project('{"i": "SGVsbG8gd29ybGQh", "ts": 0 }', '{"result": {
    "$convert": {
        "input": {
            "$convert": {
                "input": "$i",
                "to": {"type": "binData", "subtype": "$ts"},
                "format": "utf8"
            }
        },
        "to": {"type": "binData", "subtype": 0}
    }
}}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "U0dWc2JHOGdkMjl5YkdRaA==", "subType" : "00" } } }
(1 row)

-- $convert with null to type should return null with and without onNull
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": 1, "to": null}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : null }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": 1, "to": "$missingField"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : null }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": 1, "to": null, "onNull": "Input was null"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : null }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": 1, "to": "$missingField", "onNull": "Input was null"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : null }
(1 row)

-- $convert with null input should return null without onNull and onNull expression if specified even if 'to' is null
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": null, "to": "string"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : null }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": "$missingField", "to": "bool"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : null }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": null, "to": null, "onNull": "Input was null"}}}');
       bson_dollar_project       
---------------------------------------------------------------------
 { "result" : "Input was null" }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": "$missingField", "to": null, "onNull": "Input was null"}}}');
       bson_dollar_project       
---------------------------------------------------------------------
 { "result" : "Input was null" }
(1 row)

-- $convert with null and undefined/missing onNull should return empty
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": null, "to": null, "onNull": "$onNullField"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": "$missingField", "to": null, "onNull": "$onNullField"}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { }
(1 row)

-- $convert with error outside of parsing should honor onError
SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "1", "value": {"$numberDouble": "1.3"}, "convertTo": "objectId"}');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "2", "value": {"$numberDouble": "1.3"}, "convertTo": "array"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "3", "value": {"$numberDouble": "1.3"}, "convertTo": "object"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "4", "value": { "$oid" : "347f000000c1de008ec19ceb" }, "convertTo": "double"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "5", "value": { "$oid" : "347f000000c1de008ec19ceb" }, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "6", "value": { "$oid" : "347f000000c1de008ec19ceb" }, "convertTo": "long"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "7", "value": { "$oid" : "347f000000c1de008ec19ceb" }, "convertTo": "decimal"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "8", "value": true, "convertTo": "objectId"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "9", "value": false, "convertTo": "date"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "10", "value": {"$date": "2024-05-31T00:00:00.000Z"}, "convertTo": "objectId"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "11", "value": {"$date": "2024-05-31T00:00:00.000Z"}, "convertTo": "int"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "12", "value": 1, "convertTo": "date"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "13", "value": 1.3, "convertTo": "minKey"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "14", "value": 1.3, "convertTo": "missing"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "15", "value": 1.3, "convertTo": "object"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "16", "value": 1.3, "convertTo": "array"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "17", "value": 1.3, "convertTo": "binData"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "18", "value": 1.3, "convertTo": "undefined"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "19", "value": 1.3, "convertTo": "null"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "20", "value": 1.3, "convertTo": "regex"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "21", "value": 1.3, "convertTo": "dbPointer"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "22", "value": 1.3, "convertTo": "javascript"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "23", "value": 1.3, "convertTo": "symbol"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "24", "value": 1.3, "convertTo": "javascriptWithScope"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "25", "value": 1.3, "convertTo": "timestamp"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "26", "value": 1.3, "convertTo": "maxKey"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "27", "value": 1, "convertTo": "objectId"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "28", "value": {"$numberLong": "1"}, "convertTo": "objectId"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT * from documentdb_api.insert_one('db', 'convertCollWithErrors', '{"_id": "29", "value": {"$numberDecimal": "1"}, "convertTo": "objectId"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT bson_dollar_project(document, '{"output": {"$convert": { "input": "$value", "to": "$convertTo", "onError": "There was an error in $convert"}}}') FROM documentdb_api.collection('db', 'convertCollWithErrors');
                      bson_dollar_project                      
---------------------------------------------------------------------
 { "_id" : "1", "output" : "There was an error in $convert" }
 { "_id" : "2", "output" : "There was an error in $convert" }
 { "_id" : "3", "output" : "There was an error in $convert" }
 { "_id" : "4", "output" : "There was an error in $convert" }
 { "_id" : "5", "output" : "There was an error in $convert" }
 { "_id" : "6", "output" : "There was an error in $convert" }
 { "_id" : "7", "output" : "There was an error in $convert" }
 { "_id" : "8", "output" : "There was an error in $convert" }
 { "_id" : "9", "output" : "There was an error in $convert" }
 { "_id" : "10", "output" : "There was an error in $convert" }
 { "_id" : "11", "output" : "There was an error in $convert" }
 { "_id" : "12", "output" : "There was an error in $convert" }
 { "_id" : "13", "output" : "There was an error in $convert" }
 { "_id" : "14", "output" : "There was an error in $convert" }
 { "_id" : "15", "output" : "There was an error in $convert" }
 { "_id" : "16", "output" : "There was an error in $convert" }
 { "_id" : "17", "output" : "There was an error in $convert" }
 { "_id" : "18", "output" : "There was an error in $convert" }
 { "_id" : "19", "output" : "There was an error in $convert" }
 { "_id" : "20", "output" : "There was an error in $convert" }
 { "_id" : "21", "output" : "There was an error in $convert" }
 { "_id" : "22", "output" : "There was an error in $convert" }
 { "_id" : "23", "output" : "There was an error in $convert" }
 { "_id" : "24", "output" : "There was an error in $convert" }
 { "_id" : "25", "output" : "There was an error in $convert" }
 { "_id" : "26", "output" : "There was an error in $convert" }
 { "_id" : "27", "output" : "There was an error in $convert" }
 { "_id" : "28", "output" : "There was an error in $convert" }
 { "_id" : "29", "output" : "There was an error in $convert" }
(29 rows)

-- $convert undefined/missing field used for onError should return empty result
SELECT bson_dollar_project(document, '{"output": {"$convert": { "input": "$value", "to": "$convertTo", "onError": "$missingField"}}}') FROM documentdb_api.collection('db', 'convertCollWithErrors');
 bson_dollar_project 
---------------------------------------------------------------------
 { "_id" : "1" }
 { "_id" : "2" }
 { "_id" : "3" }
 { "_id" : "4" }
 { "_id" : "5" }
 { "_id" : "6" }
 { "_id" : "7" }
 { "_id" : "8" }
 { "_id" : "9" }
 { "_id" : "10" }
 { "_id" : "11" }
 { "_id" : "12" }
 { "_id" : "13" }
 { "_id" : "14" }
 { "_id" : "15" }
 { "_id" : "16" }
 { "_id" : "17" }
 { "_id" : "18" }
 { "_id" : "19" }
 { "_id" : "20" }
 { "_id" : "21" }
 { "_id" : "22" }
 { "_id" : "23" }
 { "_id" : "24" }
 { "_id" : "25" }
 { "_id" : "26" }
 { "_id" : "27" }
 { "_id" : "28" }
 { "_id" : "29" }
(29 rows)

-- $convert errors in parsing should be honored even if onError is set
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": { "input": {"$divide": [1, 0]}, "to": "string", "onError": "There was an error in $convert"}}}');
ERROR:  $divide by zero is not allowed
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": "$myField"}}');
ERROR:  $convert requires an object containing named arguments, but instead received: string
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": 1, "onError": "There was an error"}}}');
ERROR:  'to' parameter is missing for $convert
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"to": 1, "onError": "There was an error"}}}');
ERROR:  Missing 'input' parameter to $convert
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"myCustomInput": 1, "onError": "There was an error"}}}');
ERROR:  $convert encountered an unrecognized argument: myCustomInput
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": 1, "to": "someType", "onError": "There was an error"}}}');
ERROR:  Unrecognized data type alias: someType
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": 1, "to": {"$numberDouble": "1.1"}, "onError": "There was an error"}}}');
ERROR:  In $convert, numeric 'to' argument is not an integer
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": 1, "to": {"$numberDouble": "255"}, "onError": "There was an error"}}}');
ERROR:  During $convert, the numeric value provided for 'to' is not a valid BSON type: 255
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": 1, "to": {"$numberDouble": "-2.0"}, "onError": "There was an error"}}}');
ERROR:  During $convert, the numeric value provided for 'to' is not a valid BSON type: -2
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": 1, "to": [], "onError": "There was an error"}}}');
ERROR:  The 'to' parameter in $convert must contain either a string value or a numeric value, but it currently holds array
-- $convert identifies the target types with numbers
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": -1}}}');
ERROR:  Unsupported conversion from object to minKey in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 127}}}');
ERROR:  Unsupported conversion from object to maxKey in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 0}}}');
ERROR:  Unsupported conversion from object to missing in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 1}}}');
ERROR:  Unsupported conversion from object to double in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 2}}}');
ERROR:  Unsupported conversion from object to string in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 3}}}');
ERROR:  Unsupported conversion from object to object in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 4}}}');
ERROR:  Unsupported conversion from object to array in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 5}}}');
ERROR:  Unsupported conversion from object to binData in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 6}}}');
ERROR:  Unsupported conversion from object to undefined in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 7}}}');
ERROR:  Unsupported conversion from object to objectId in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 8}}}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : true }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 9}}}');
ERROR:  Unsupported conversion from object to date in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 10}}}');
ERROR:  Unsupported conversion from object to null in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 11}}}');
ERROR:  Unsupported conversion from object to regex in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 12}}}');
ERROR:  Unsupported conversion from object to dbPointer in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 13}}}');
ERROR:  Unsupported conversion from object to javascript in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 14}}}');
ERROR:  Unsupported conversion from object to symbol in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 15}}}');
ERROR:  Unsupported conversion from object to javascriptWithScope in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 16}}}');
ERROR:  Unsupported conversion from object to int in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {}, "to": 17}}}');
ERROR:  Unsupported conversion from object to timestamp in $convert with no onError value
-- double max + 1 and min-1 range $convert, $toLong
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {"$numberDouble" : "9223372036854775296"}, "to": "long"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: 9.22337E+18
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {"$numberDouble" : "-9223372036854776833"}, "to": "long"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: -9.22337E+18
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDouble": "9223372036854775296"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: 9.22337E+18
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDouble": "-9223372036854776833"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: -9.22337E+18
-- min supported value for $convert, $toLong
SELECT * FROM bson_dollar_project('{}', '{"result": {"$convert": {"input": {"$numberDouble" : "-9223372036854776832"}, "to": "long"}}}');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-9223372036854775808" } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDouble": "-9223372036854776832"}}}');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-9223372036854775808" } }
(1 row)

--
--
-- $to* alias tests.
-- call the shorthand convert $to* aliases.
WITH toQuery AS (SELECT bson_dollar_project(
  document,
  format(
    '{"expected": 1, "output": { "$%s": "$value" } }',
    CASE TRIM(BOTH '"' FROM document->>'convertTo')
      WHEN 'double'  THEN 'toDouble'
      WHEN 'string'  THEN 'toString'
      WHEN 'objectId' THEN 'toObjectId'
      WHEN 'bool'    THEN 'toBool'
      WHEN 'date'    THEN 'toDate'
      WHEN 'int'     THEN 'toInt'
      WHEN 'long'    THEN 'toLong'
      WHEN 'decimal' THEN 'toDecimal'
      ELSE 'toInvalid'  -- fail for easier diagnostics
    END
  )::bson
) as outDoc FROM documentdb_api.collection('db', 'convertColl'))
SELECT bson_dollar_project(outDoc, '{"result": {"$eq": ["$output", "$expected"]}}') FROM toQuery;
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
 { "_id" : "2", "result" : true }
 { "_id" : "3", "result" : true }
 { "_id" : "4", "result" : true }
 { "_id" : "5", "result" : true }
 { "_id" : "6", "result" : true }
 { "_id" : "7", "result" : true }
 { "_id" : "8", "result" : true }
 { "_id" : "9", "result" : true }
 { "_id" : "10", "result" : true }
 { "_id" : "11", "result" : true }
 { "_id" : "12", "result" : true }
 { "_id" : "13", "result" : true }
 { "_id" : "14", "result" : true }
 { "_id" : "15", "result" : true }
 { "_id" : "16", "result" : true }
 { "_id" : "17", "result" : true }
 { "_id" : "18", "result" : true }
 { "_id" : "19", "result" : true }
 { "_id" : "20", "result" : true }
 { "_id" : "21", "result" : true }
 { "_id" : "22", "result" : true }
 { "_id" : "23", "result" : true }
 { "_id" : "24", "result" : true }
 { "_id" : "26", "result" : true }
 { "_id" : "27", "result" : true }
 { "_id" : "28", "result" : true }
 { "_id" : "29", "result" : true }
 { "_id" : "30", "result" : true }
 { "_id" : "31", "result" : true }
 { "_id" : "32", "result" : true }
 { "_id" : "33", "result" : true }
 { "_id" : "34", "result" : true }
 { "_id" : "35", "result" : true }
 { "_id" : "36", "result" : true }
 { "_id" : "37", "result" : true }
 { "_id" : "38", "result" : true }
 { "_id" : "39", "result" : true }
 { "_id" : "40", "result" : true }
 { "_id" : "45", "result" : true }
 { "_id" : "46", "result" : true }
 { "_id" : "47", "result" : true }
 { "_id" : "48", "result" : true }
 { "_id" : "49", "result" : true }
 { "_id" : "50", "result" : true }
 { "_id" : "51", "result" : true }
 { "_id" : "52", "result" : true }
 { "_id" : "53", "result" : true }
 { "_id" : "54", "result" : true }
 { "_id" : "55", "result" : true }
 { "_id" : "56", "result" : true }
 { "_id" : "57", "result" : true }
 { "_id" : "58", "result" : true }
 { "_id" : "59", "result" : true }
 { "_id" : "61", "result" : true }
 { "_id" : "62", "result" : true }
 { "_id" : "63", "result" : true }
 { "_id" : "64", "result" : true }
 { "_id" : "65", "result" : true }
 { "_id" : "66", "result" : true }
 { "_id" : "67", "result" : true }
 { "_id" : "68", "result" : true }
 { "_id" : "69", "result" : true }
 { "_id" : "70", "result" : true }
 { "_id" : "71", "result" : true }
 { "_id" : "72", "result" : true }
 { "_id" : "73", "result" : true }
 { "_id" : "74", "result" : true }
 { "_id" : "75", "result" : true }
 { "_id" : "76", "result" : true }
 { "_id" : "77", "result" : true }
 { "_id" : "78", "result" : true }
 { "_id" : "79", "result" : true }
 { "_id" : "80", "result" : true }
 { "_id" : "81", "result" : true }
 { "_id" : "82", "result" : true }
 { "_id" : "83", "result" : true }
 { "_id" : "84", "result" : true }
 { "_id" : "85", "result" : true }
 { "_id" : "86", "result" : true }
 { "_id" : "87", "result" : true }
 { "_id" : "88", "result" : true }
(82 rows)

-- $toObjectId negative tests
-- only supports 24 char hex string, objectId, null/undefined, and requires exactly 1 argument.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toObjectId": {"input": ""}}}');
ERROR:  Unsupported conversion from object to objectId in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toObjectId": []}}');
ERROR:  The expression $toObjectId requires exactly 1 arguments, but 0 arguments were actually provided.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toObjectId": "this is a string"}}');
ERROR:  Failed to parse objectId 'this is a string' in $convert with no onError value: Invalid string length for parsing to OID, expected 24 but found 16
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toObjectId": "asdsfsdzzzzsersdfrtghtsz"}}');
ERROR:  Failed to parse objectId 'asdsfsdzzzzsersdfrtghtsz' in $convert with no onError value: Invalid character found in hex string: 's'
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toObjectId": "639926cee6bda3127f153bfZ"}}');
ERROR:  Failed to parse objectId '639926cee6bda3127f153bfZ' in $convert with no onError value: Invalid character found in hex string: 'Z'
-- $toInt negative tests
-- only supports numeric, bool or string and must not overflow/underflow. Takes exactly 1 argument.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"input": ""}}}');
ERROR:  Unsupported conversion from object to int in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": []}}');
ERROR:  The expression $toInt requires exactly 1 arguments, but 0 arguments were actually provided.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": [{"$date": "2022-01-01T00:00:00.000Z"}]}}');
ERROR:  Unsupported conversion from date to int in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"$numberDouble": "2147483648"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: 2.14748E+09
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"$numberDouble": "Infinity"}}}');
ERROR:  Attempt to convert infinity value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"$numberDouble": "-Infinity"}}}');
ERROR:  Attempt to convert infinity value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"$numberDouble": "NaN"}}}');
ERROR:  Attempt to convert NaN value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"$numberDecimal": "-Infinity"}}}');
ERROR:  Attempt to convert infinity value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"$numberDecimal": "Infinity"}}}');
ERROR:  Attempt to convert infinity value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"$numberDecimal": "NaN"}}}');
ERROR:  Attempt to convert NaN value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"$numberDecimal": "-2147483649"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: -2147483649
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": {"$numberLong": "-2147483649"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: -2147483649
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": "-2147483649" }}');
ERROR:  Unable to interpret number '-2147483649' within $convert, as no onError value was specified: Overflow
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": "2147483648" }}');
ERROR:  Unable to interpret number '2147483648' within $convert, as no onError value was specified: Overflow
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": "This contains a number: 324423" }}');
ERROR:  Unable to interpret number 'This contains a number: 324423' within $convert, as no onError value was specified: Failed to process the entire string.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": "    324423" }}');
ERROR:  Unable to interpret number '    324423' within $convert, as no onError value was specified: Failed to process the entire string.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": "324423     " }}');
ERROR:  Unable to interpret number '324423     ' within $convert, as no onError value was specified: Failed to process the entire string.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": "0x01" }}');
ERROR:  Invalid hexadecimal input detected in $convert without a specified onError handler: 0x01
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toInt": "" }}');
ERROR:  Unable to interpret number '' within $convert, as no onError value was specified: No digits
-- $toLong negative tests
-- only support numeric, date, bool or string, must not overflow/underflow. Takes exactly 1 argument.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"input": ""}}}');
ERROR:  Unsupported conversion from object to long in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": []}}');
ERROR:  The expression $toLong requires exactly 1 arguments, but 0 arguments were actually provided.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDouble": "9223372036854775808"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: 9.22337E+18
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDouble": "Infinity"}}}');
ERROR:  Attempt to convert infinity value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDouble": "-Infinity"}}}');
ERROR:  Attempt to convert infinity value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDouble": "NaN"}}}');
ERROR:  Attempt to convert NaN value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDecimal": "-Infinity"}}}');
ERROR:  Attempt to convert infinity value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDecimal": "Infinity"}}}');
ERROR:  Attempt to convert infinity value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDecimal": "NaN"}}}');
ERROR:  Attempt to convert NaN value to integer type in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": {"$numberDecimal": "-9223372036854775809"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: -9223372036854775809
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": "-9223372036854775809" }}');
ERROR:  Unable to interpret number '-9223372036854775809' within $convert, as no onError value was specified: Overflow
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": "9223372036854775808" }}');
ERROR:  Unable to interpret number '9223372036854775808' within $convert, as no onError value was specified: Overflow
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": "This contains a number: 324423" }}');
ERROR:  Unable to interpret number 'This contains a number: 324423' within $convert, as no onError value was specified: Failed to process the entire string.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": "    324423" }}');
ERROR:  Unable to interpret number '    324423' within $convert, as no onError value was specified: Failed to process the entire string.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": "324423     " }}');
ERROR:  Unable to interpret number '324423     ' within $convert, as no onError value was specified: Failed to process the entire string.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": "0x01" }}');
ERROR:  Invalid hexadecimal input detected in $convert without a specified onError handler: 0x01
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toLong": "" }}');
ERROR:  Unable to interpret number '' within $convert, as no onError value was specified: No digits
-- $toDouble negative tests
-- only support numeric, date, bool or string, must not overflow/underflow. Takes exactly 1 argument.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": {"input": ""}}}');
ERROR:  Unsupported conversion from object to double in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": []}}');
ERROR:  The expression $toDouble requires exactly 1 arguments, but 0 arguments were actually provided.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": {"$numberDecimal": "1.8E309"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: 1.8E+309
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": {"$numberDecimal": "-1.8E309"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: -1.8E+309
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": "1.8E309" }}');
ERROR:  Unable to interpret number '1.8E309' within $convert, as no onError value was specified: Value exceeds allowed range
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": "-1.8E309" }}');
ERROR:  Unable to interpret number '-1.8E309' within $convert, as no onError value was specified: Value exceeds allowed range
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": "This contains a number: 324423.23" }}');
ERROR:  Unable to interpret number 'This contains a number: 324423.23' within $convert, as no onError value was specified: Unable to convert the provided string into a valid decimal format
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": "    324423.0" }}');
ERROR:  Unable to interpret number '    324423.0' within $convert, as no onError value was specified: Unable to convert the provided string into a valid decimal format
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": "324423.00001     " }}');
ERROR:  Unable to interpret number '324423.00001     ' within $convert, as no onError value was specified: Unable to convert the provided string into a valid decimal format
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": "0x01" }}');
ERROR:  Invalid hexadecimal input detected in $convert without a specified onError handler: 0x01
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDouble": "" }}');
ERROR:  Unable to interpret number '' within $convert, as no onError value was specified: Empty string
-- $toDecimal negative tests
-- only support numeric, date, bool or string, must not overflow/underflow. Takes exactly 1 argument.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDecimal": {"input": ""}}}');
ERROR:  Unsupported conversion from object to decimal in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDecimal": []}}');
ERROR:  The expression $toDecimal requires exactly 1 arguments, but 0 arguments were actually provided.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDecimal": "123423.8E6145" }}');
ERROR:  Unable to interpret number '123423.8E6145' within $convert, as no onError value was specified: Unable to convert the provided string into a valid decimal format
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDecimal": "-123423.8E6145" }}');
ERROR:  Unable to interpret number '-123423.8E6145' within $convert, as no onError value was specified: Unable to convert the provided string into a valid decimal format
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDecimal": "This contains a number: 324423.23" }}');
ERROR:  Unable to interpret number 'This contains a number: 324423.23' within $convert, as no onError value was specified: Unable to convert the provided string into a valid decimal format
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDecimal": "    324423.0" }}');
ERROR:  Unable to interpret number '    324423.0' within $convert, as no onError value was specified: Unable to convert the provided string into a valid decimal format
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDecimal": "324423.00001     " }}');
ERROR:  Unable to interpret number '324423.00001     ' within $convert, as no onError value was specified: Unable to convert the provided string into a valid decimal format
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDecimal": "0x01" }}');
ERROR:  Invalid hexadecimal input detected in $convert without a specified onError handler: 0x01
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDecimal": "" }}');
ERROR:  Unable to interpret number '' within $convert, as no onError value was specified: Empty string
-- $toString negative tests
-- only support numeric, date, bool, string, objectId. Takes exactly 1 argument
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toString": {"input": ""}}}');
ERROR:  Unsupported conversion from object to string in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toString": []}}');
ERROR:  The expression $toString requires exactly 1 arguments, but 0 arguments were actually provided.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toString": {"$timestamp" : { "t": 1670981326, "i": 1 }}}}');
ERROR:  Unsupported conversion from timestamp to string in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toString": [[]]}}');
ERROR:  Unsupported conversion from array to string in $convert with no onError value
-- $toDate negative tests
-- Currently double, decimal128, long, objectId, timestamp, date and string are supported.
-- Numeric, will be added to the Unix epoch 0 and shouldn't exceed int64 limits. Takes exactly 1 argument
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": {"input": ""}}}');
ERROR:  Unsupported conversion from object to date in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": []}}');
ERROR:  The expression $toDate requires exactly 1 arguments, but 0 arguments were actually provided.
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": [[]]}}');
ERROR:  Unsupported conversion from array to date in $convert with no onError value
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": {"$numberDouble": "9223372036854775808"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: 9.22337E+18
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": {"$numberDecimal": "9223372036854775808"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: 9223372036854775808
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": {"$numberDecimal": "-9223372036854775809"}}}');
ERROR:  Conversion would overflow target type in $convert with no onError value: -9223372036854775809
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": {"$numberDouble": "-9223372036854775809"}}}');
                           bson_dollar_project                           
---------------------------------------------------------------------
 { "result" : { "$date" : { "$numberLong" : "-9223372036854775808" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": 1}}');
ERROR:  Unsupported conversion from int to date in $convert with no onError value
-- $toDate test for string case
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": "2022-01-01T00:00:00.000Z"}}');
                       bson_dollar_project                        
---------------------------------------------------------------------
 { "result" : { "$date" : { "$numberLong" : "1641024000000" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": "2022-01-01 00:00:00.000"}}');
                       bson_dollar_project                        
---------------------------------------------------------------------
 { "result" : { "$date" : { "$numberLong" : "1641024000000" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": "2018-03-20T12:00:00+0500"}}');
                       bson_dollar_project                        
---------------------------------------------------------------------
 { "result" : { "$date" : { "$numberLong" : "1521554400000" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": "2018-03-20"}}');
                       bson_dollar_project                        
---------------------------------------------------------------------
 { "result" : { "$date" : { "$numberLong" : "1521529200000" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$toDate": "2017-Jul-04 noon"}}');
                       bson_dollar_project                        
---------------------------------------------------------------------
 { "result" : { "$date" : { "$numberLong" : "1499194800000" } } }
(1 row)

-- $$toHashedIndexKey tests
--test int
select *from bson_dollar_project('{"tests": 3}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-4918719581749358852" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": 3 } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-4918719581749358852" } }
(1 row)

--test double
select *from bson_dollar_project('{"tests": 3.1}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "4843356556253255961" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": 3.1 } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "4843356556253255961" } }
(1 row)

--test string
select *from bson_dollar_project('{"tests": "abc"}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-6969118462091671691" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": "abc" } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-6969118462091671691" } }
(1 row)

--test int64
select *from bson_dollar_project('{"tests": 123456789012345678}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "1821714458417502614" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": 123456789012345678 } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "1821714458417502614" } }
(1 row)

--test array
select *from bson_dollar_project('{"tests": [1, 2, 3.1]}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "9190027316038958342" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": [1, 2, 3.1] } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "9190027316038958342" } }
(1 row)

--test nested array
select *from bson_dollar_project('{"tests": [1, 2, 3.1,[4, 5], 6]}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-5553235042546732581" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": [1, 2, 3.1,[4, 5], 6] } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-5553235042546732581" } }
(1 row)

--test nested object
select *from bson_dollar_project('{"tests": [{"$numberDecimal": "1.2"},3]}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-893570203633809211" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": [{"$numberDecimal": "1.2"},3] } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-893570203633809211" } }
(1 row)

--test null
select *from bson_dollar_project('{"tests": null}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-4514028574017177401" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": null } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-4514028574017177401" } }
(1 row)

--test NaN
select *from bson_dollar_project('{"tests": {"$numberDouble": "NaN"}}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-2341399240614902273" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": {"$numberDouble": "NaN"} } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-2341399240614902273" } }
(1 row)

--test Infinity
select *from bson_dollar_project('{"tests": {"$numberDouble": "Infinity"}}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-3715419061678165155" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": {"$numberDouble": "Infinity"} } }');
                    bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "-3715419061678165155" } }
(1 row)

--test -Infinity
select *from bson_dollar_project('{"tests": {"$numberDouble": "-Infinity"}}', '{"result": { "$toHashedIndexKey": "$tests" } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "8076669524792135709" } }
(1 row)

select *from bson_dollar_project('{}', '{"result": { "$toHashedIndexKey": {"$numberDouble": "-Infinity"} } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "8076669524792135709" } }
(1 row)

--test path
select *from bson_dollar_project('{"tests": {"test" : 5}}', '{"result": { "$toHashedIndexKey": "$tests.test" } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "1786987034919379147" } }
(1 row)

select *from bson_dollar_project('{"tests": 3}', '{"result": { "$toHashedIndexKey": "$test" } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "4154612158245552303" } }
(1 row)

select *from bson_dollar_project('{"tests": {"test" : 5}}', '{"result": { "$toHashedIndexKey": "$tests.tes" } }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "result" : { "$numberLong" : "4154612158245552303" } }
(1 row)

-- $toUUID tests
-- equivalent $convert query should be tested after extended $convert syntax is supported
-- positive tests
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toUUID": null }}');
 bson_dollar_project 
---------------------------------------------------------------------
 { "result" : null }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$toUUID": "123e4567-e89b-12d3-a456-426614174000" }}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "Ej5FZ+ibEtOkVkJmFBdAAA==", "subType" : "04" } } }
(1 row)

SELECT * FROM bson_dollar_project('{}', '{"result": {"$toUUID": ["123e4567-e89b-12d3-a456-426614174000"] }}');
                                    bson_dollar_project                                     
---------------------------------------------------------------------
 { "result" : { "$binary" : { "base64" : "Ej5FZ+ibEtOkVkJmFBdAAA==", "subType" : "04" } } }
(1 row)

-- negative tests
-- invalid string
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toUUID": "invalid-uuid-1234" }}');
ERROR:  The provided UUID string 'invalid-uuid-1234' is not valid
-- invalid type
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toUUID": 1234 }}');
ERROR:  Unsupported conversion from int to binData in $convert with no onError value
-- invalid count number of array input
SELECT * FROM bson_dollar_project('{}', '{"result": {"$toUUID": ["123e4567-e89b-12d3-a456-426614174000", "123e4567-e89b-12d3-a456-426614174000"] }}');
ERROR:  The expression $toUUID requires exactly 1 arguments, but 2 arguments were actually provided.

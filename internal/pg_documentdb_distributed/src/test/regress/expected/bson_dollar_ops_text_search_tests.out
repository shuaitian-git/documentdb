set search_path to documentdb_core,documentdb_api,documentdb_api_catalog,pg_catalog;
SET citus.next_shard_id TO 7980000;
SET documentdb.next_collection_id TO 7980;
SET documentdb.next_collection_index_id TO 7980;
-- insert some docs
SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 1, "a": "this is a cat" }');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 2, "a": "this is a dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 3, "a": "these are dogs" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 4, "a": "these are cats" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 5, "a": "these are catatonic" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- do a $text query. Should fail (there's no index)
SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "cat" } }';
ERROR:  A text index is necessary to perform a $text query.
-- create a text index.
SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "bson_dollar_ops_text_search", "indexes": [ { "key": { "a": "text" }, "name": "a_text" } ] }', TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

-- now do a $text query. Should succeed.
SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "cat" } }';
                          document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "this is a cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "these are cats" }
(2 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "dog" } }';
                          document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : "this is a dog" }
 { "_id" : { "$numberInt" : "3" }, "a" : "these are dogs" }
(2 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "cat | dog" } }';
                          document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "this is a cat" }
 { "_id" : { "$numberInt" : "2" }, "a" : "this is a dog" }
 { "_id" : { "$numberInt" : "3" }, "a" : "these are dogs" }
 { "_id" : { "$numberInt" : "4" }, "a" : "these are cats" }
(4 rows)

EXPLAIN (COSTS OFF) SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "cat" } }';
                                                                                                                                      QUERY PLAN                                                                                                                                      
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Custom Scan (DocumentDBApiQueryScan)
               ->  Bitmap Heap Scan on documents_7980_7980005 collection
                     Filter: documentdb_api_internal.bson_text_meta_qual(document, '''cat'''::tsquery, '\x0400000000000000ffffffff000000000000000000000000000000002800000000000000010000000000803f000000000000803f000000000000803f000000000000803f00000000010000006100'::bytea, true)
                     ->  Bitmap Index Scan on a_text
                           Index Cond: (document OPERATOR(documentdb_api_catalog.@#%) '''cat'''::tsquery)
(10 rows)

-- invalid queries
-- $text on subsequent stages should fail.
WITH r1 AS (SELECT bson_dollar_project(document, '{ "a": 1 }') AS document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search'))
SELECT document FROM r1 WHERE document @@ '{ "$text": { "$search": "cat" } }';
ERROR:  A text index is necessary to perform a $text query.
-- no more than 1 $text:
SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$and": [ { "$text": { "$search": "cat" } }, { "$text": { "$search": "dogs" } }] }';
ERROR:  Excessive number of text expressions
CALL documentdb_api.drop_indexes('db', '{ "dropIndexes": "bson_dollar_ops_text_search", "index": "a_text" }');
                          retval                          
---------------------------------------------------------------------
 { "ok" : true, "nIndexesWas" : { "$numberLong" : "2" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 11, "topic": "apple", "writer": "Carol", "score": 50, "location": "New York", "published": true }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 12, "topic": "Apple Store", "writer": "Bob", "score": 5, "location": "San Francisco", "published": false }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 13, "topic": "Picking a berry", "writer": "Alice", "score": 90, "location": "London", "published": true }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 14, "topic": "picking", "writer": "Carol", "score": 100, "location": "Berlin", "published": false }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 15, "topic": "apple and berry", "writer": "Alice", "score": 200, "location": "Paris", "published": true }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 16, "topic": "Яблоко", "writer": "David", "score": 80, "location": "Moscow", "published": false }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 17, "topic": "pear and berry", "writer": "Bob", "score": 10, "location": "Madrid", "published": true }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 18, "topic": "Pear with Berry", "writer": "Carol", "score": 10, "location": "Rome", "published": false }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 30, "topic": "Me encanta la miel natural", "writer": "Alice", "score": 10, "location": "Barcelona", "published": true }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "bson_dollar_ops_text_search", "indexes": [ { "key": { "topic": "text" }, "name": "topic_text" } ] }', TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "apple" } }' ORDER BY object_id;
                                                                              document                                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "11" }, "topic" : "apple", "writer" : "Carol", "score" : { "$numberInt" : "50" }, "location" : "New York", "published" : true }
 { "_id" : { "$numberInt" : "12" }, "topic" : "Apple Store", "writer" : "Bob", "score" : { "$numberInt" : "5" }, "location" : "San Francisco", "published" : false }
 { "_id" : { "$numberInt" : "15" }, "topic" : "apple and berry", "writer" : "Alice", "score" : { "$numberInt" : "200" }, "location" : "Paris", "published" : true }
(3 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "pick apple" } }' ORDER BY object_id;
                                                                              document                                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "11" }, "topic" : "apple", "writer" : "Carol", "score" : { "$numberInt" : "50" }, "location" : "New York", "published" : true }
 { "_id" : { "$numberInt" : "12" }, "topic" : "Apple Store", "writer" : "Bob", "score" : { "$numberInt" : "5" }, "location" : "San Francisco", "published" : false }
 { "_id" : { "$numberInt" : "13" }, "topic" : "Picking a berry", "writer" : "Alice", "score" : { "$numberInt" : "90" }, "location" : "London", "published" : true }
 { "_id" : { "$numberInt" : "14" }, "topic" : "picking", "writer" : "Carol", "score" : { "$numberInt" : "100" }, "location" : "Berlin", "published" : false }
 { "_id" : { "$numberInt" : "15" }, "topic" : "apple and berry", "writer" : "Alice", "score" : { "$numberInt" : "200" }, "location" : "Paris", "published" : true }
(5 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "\"apple store\"" } }' ORDER BY object_id;
                                                                              document                                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "12" }, "topic" : "Apple Store", "writer" : "Bob", "score" : { "$numberInt" : "5" }, "location" : "San Francisco", "published" : false }
(1 row)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "apple -store" } }' ORDER BY object_id;
                                                                              document                                                                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "11" }, "topic" : "apple", "writer" : "Carol", "score" : { "$numberInt" : "50" }, "location" : "New York", "published" : true }
 { "_id" : { "$numberInt" : "15" }, "topic" : "apple and berry", "writer" : "Alice", "score" : { "$numberInt" : "200" }, "location" : "Paris", "published" : true }
(2 rows)

-- TODO: this is incorrect, we aren’t diacritic insensitive by default, it should return more documents.
-- See: https://www.postgresql.org/docs/current/unaccent.html
SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "яблоко" } }';
                                                                          document                                                                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "16" }, "topic" : "Яблоко", "writer" : "David", "score" : { "$numberInt" : "80" }, "location" : "Moscow", "published" : false }
(1 row)

-- this partially works:
SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "miel", "$language": "es" } }';
                                                                                     document                                                                                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "30" }, "topic" : "Me encanta la miel natural", "writer" : "Alice", "score" : { "$numberInt" : "10" }, "location" : "Barcelona", "published" : true }
(1 row)

-- invalid language
SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "miel", "$language": "xx" } }';
ERROR:  unsupported language: "xx" for text index version 3
-- try these with the function.
SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE documentdb_api_internal.bson_dollar_text(document, '{ "": { "$search": "apple" } }') ORDER BY object_id;
                                                                              document                                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "11" }, "topic" : "apple", "writer" : "Carol", "score" : { "$numberInt" : "50" }, "location" : "New York", "published" : true }
 { "_id" : { "$numberInt" : "12" }, "topic" : "Apple Store", "writer" : "Bob", "score" : { "$numberInt" : "5" }, "location" : "San Francisco", "published" : false }
 { "_id" : { "$numberInt" : "15" }, "topic" : "apple and berry", "writer" : "Alice", "score" : { "$numberInt" : "200" }, "location" : "Paris", "published" : true }
(3 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE documentdb_api_internal.bson_dollar_text(document, '{ "": { "$search": "pick apple" } }') ORDER BY object_id;
                                                                              document                                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "11" }, "topic" : "apple", "writer" : "Carol", "score" : { "$numberInt" : "50" }, "location" : "New York", "published" : true }
 { "_id" : { "$numberInt" : "12" }, "topic" : "Apple Store", "writer" : "Bob", "score" : { "$numberInt" : "5" }, "location" : "San Francisco", "published" : false }
 { "_id" : { "$numberInt" : "13" }, "topic" : "Picking a berry", "writer" : "Alice", "score" : { "$numberInt" : "90" }, "location" : "London", "published" : true }
 { "_id" : { "$numberInt" : "14" }, "topic" : "picking", "writer" : "Carol", "score" : { "$numberInt" : "100" }, "location" : "Berlin", "published" : false }
 { "_id" : { "$numberInt" : "15" }, "topic" : "apple and berry", "writer" : "Alice", "score" : { "$numberInt" : "200" }, "location" : "Paris", "published" : true }
(5 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE documentdb_api_internal.bson_dollar_text(document, '{ "": { "$search": "\"apple store\"" } }') ORDER BY object_id;
                                                                              document                                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "12" }, "topic" : "Apple Store", "writer" : "Bob", "score" : { "$numberInt" : "5" }, "location" : "San Francisco", "published" : false }
(1 row)

-- shard collection & try the query again
SELECT documentdb_api.shard_collection('db', 'bson_dollar_ops_text_search', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "apple" } }' ORDER BY object_id;
                                                                              document                                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "11" }, "topic" : "apple", "writer" : "Carol", "score" : { "$numberInt" : "50" }, "location" : "New York", "published" : true }
 { "_id" : { "$numberInt" : "12" }, "topic" : "Apple Store", "writer" : "Bob", "score" : { "$numberInt" : "5" }, "location" : "San Francisco", "published" : false }
 { "_id" : { "$numberInt" : "15" }, "topic" : "apple and berry", "writer" : "Alice", "score" : { "$numberInt" : "200" }, "location" : "Paris", "published" : true }
(3 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "pick apple" } }' ORDER BY object_id;
                                                                              document                                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "11" }, "topic" : "apple", "writer" : "Carol", "score" : { "$numberInt" : "50" }, "location" : "New York", "published" : true }
 { "_id" : { "$numberInt" : "12" }, "topic" : "Apple Store", "writer" : "Bob", "score" : { "$numberInt" : "5" }, "location" : "San Francisco", "published" : false }
 { "_id" : { "$numberInt" : "13" }, "topic" : "Picking a berry", "writer" : "Alice", "score" : { "$numberInt" : "90" }, "location" : "London", "published" : true }
 { "_id" : { "$numberInt" : "14" }, "topic" : "picking", "writer" : "Carol", "score" : { "$numberInt" : "100" }, "location" : "Berlin", "published" : false }
 { "_id" : { "$numberInt" : "15" }, "topic" : "apple and berry", "writer" : "Alice", "score" : { "$numberInt" : "200" }, "location" : "Paris", "published" : true }
(5 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "\"apple store\"" } }' ORDER BY object_id;
                                                                              document                                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "12" }, "topic" : "Apple Store", "writer" : "Bob", "score" : { "$numberInt" : "5" }, "location" : "San Francisco", "published" : false }
(1 row)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "apple -store" } }' ORDER BY object_id;
                                                                              document                                                                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "11" }, "topic" : "apple", "writer" : "Carol", "score" : { "$numberInt" : "50" }, "location" : "New York", "published" : true }
 { "_id" : { "$numberInt" : "15" }, "topic" : "apple and berry", "writer" : "Alice", "score" : { "$numberInt" : "200" }, "location" : "Paris", "published" : true }
(2 rows)

-- now repeat the above with default_languages.
CALL documentdb_api.drop_indexes('db', '{ "dropIndexes": "bson_dollar_ops_text_search", "index": "topic_text" }');
                          retval                          
---------------------------------------------------------------------
 { "ok" : true, "nIndexesWas" : { "$numberLong" : "2" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 21, "titular": "Manzana", "writer": "xyz", "score": 50 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 22, "titular": "Comprar Manzana", "writer": "efg", "score": 5 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 23, "titular": "Cosechando una baya", "writer": "abc", "score": 90  }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 24, "titular": "Cosechar", "writer": "xyz", "score": 100 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 25, "titular": "Manzana con baya", "writer": "abc", "score": 200 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 27, "titular": "Manzana con pera", "writer": "efg", "score": 10 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 28, "titular": "Manzana con pera y baya", "writer": "xyz", "score": 10 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "bson_dollar_ops_text_search", "indexes": [ { "key": { "titular": "text" }, "name": "titular_text", "default_language": "es" } ] }', TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "Manzana" } }' ORDER BY object_id;
                                                            document                                                             
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "writer" : "xyz", "score" : { "$numberInt" : "50" } }
 { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "writer" : "efg", "score" : { "$numberInt" : "5" } }
 { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "writer" : "abc", "score" : { "$numberInt" : "200" } }
 { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "writer" : "efg", "score" : { "$numberInt" : "10" } }
 { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "writer" : "xyz", "score" : { "$numberInt" : "10" } }
(5 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "Cosechar" } }' ORDER BY object_id;
                                                          document                                                           
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "23" }, "titular" : "Cosechando una baya", "writer" : "abc", "score" : { "$numberInt" : "90" } }
 { "_id" : { "$numberInt" : "24" }, "titular" : "Cosechar", "writer" : "xyz", "score" : { "$numberInt" : "100" } }
(2 rows)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "Comprando Manzana" } }' ORDER BY object_id;
                                                            document                                                             
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "writer" : "xyz", "score" : { "$numberInt" : "50" } }
 { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "writer" : "efg", "score" : { "$numberInt" : "5" } }
 { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "writer" : "abc", "score" : { "$numberInt" : "200" } }
 { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "writer" : "efg", "score" : { "$numberInt" : "10" } }
 { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "writer" : "xyz", "score" : { "$numberInt" : "10" } }
(5 rows)

-- now add projection.
SELECT bson_dollar_project(document, '{ "_id": 1, "titular": 1, "rank": { "$meta": "textScore" }}') FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "Manzana baya cosechar" } }';
                                               bson_dollar_project                                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "23" }, "titular" : "Cosechando una baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "24" }, "titular" : "Cosechar", "rank" : { "$numberDouble" : "1.0" } }
(7 rows)

SELECT bson_dollar_add_fields(document, '{ "rank": { "$meta": "textScore" }}') FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "Manzana baya cosechar" } }';
                                                                        bson_dollar_add_fields                                                                         
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "writer" : "xyz", "score" : { "$numberInt" : "50" }, "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "writer" : "efg", "score" : { "$numberInt" : "5" }, "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "writer" : "xyz", "score" : { "$numberInt" : "10" }, "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "23" }, "titular" : "Cosechando una baya", "writer" : "abc", "score" : { "$numberInt" : "90" }, "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "writer" : "abc", "score" : { "$numberInt" : "200" }, "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "writer" : "efg", "score" : { "$numberInt" : "10" }, "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "24" }, "titular" : "Cosechar", "writer" : "xyz", "score" : { "$numberInt" : "100" }, "rank" : { "$numberDouble" : "1.0" } }
(7 rows)

SELECT bson_dollar_project_find(document, '{ "_id": 1, "titular": 1, "rank": { "$meta": "textScore" }}') FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "Manzana baya cosechar" } }';
                                             bson_dollar_project_find                                             
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "23" }, "titular" : "Cosechando una baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "24" }, "titular" : "Cosechar", "rank" : { "$numberDouble" : "1.0" } }
(7 rows)

SELECT cursorPage, continuation, persistConnection FROM documentdb_api.find_cursor_first_page('db', '{ "find": "bson_dollar_ops_text_search", "filter": { "$text": { "$search": "Manzana baya cosechar" } }, "projection": { "_id": 1, "titular": 1, "rank": { "$meta": "textScore" }} }');
                                                                                                                                                                                                                                                                                                                                                                                                                                                       cursorpage                                                                                                                                                                                                                                                                                                                                                                                                                                                       | continuation | persistconnection 
---------------------------------------------------------------------
 { "cursor" : { "id" : { "$numberLong" : "0" }, "ns" : "db.bson_dollar_ops_text_search", "firstBatch" : [ { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "rank" : { "$numberDouble" : "1.0" } }, { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "rank" : { "$numberDouble" : "1.0" } }, { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "rank" : { "$numberDouble" : "2.0" } }, { "_id" : { "$numberInt" : "23" }, "titular" : "Cosechando una baya", "rank" : { "$numberDouble" : "2.0" } }, { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "rank" : { "$numberDouble" : "2.0" } }, { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "rank" : { "$numberDouble" : "1.0" } }, { "_id" : { "$numberInt" : "24" }, "titular" : "Cosechar", "rank" : { "$numberDouble" : "1.0" } } ] }, "ok" : { "$numberDouble" : "1.0" } } |              | f
(1 row)

-- pipeline cases
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "bson_dollar_ops_text_search", "cursor": {}, "pipeline": [ { "$project": { "_id": 1 } }, { "$match": { "$text": { "$search": "Manzana baya cosechar" } } } ] }');
ERROR:  A text index is necessary to perform a $text query.
CONTEXT:  while executing command on localhost:58070
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "bson_dollar_ops_text_search", "cursor": {}, "pipeline": [ { "$match": { "$text": { "$search": "Manzana baya cosechar" } } }, { "$sort": { "_id": 1 } } ] }');
                                                            document                                                             
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "writer" : "xyz", "score" : { "$numberInt" : "50" } }
 { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "writer" : "efg", "score" : { "$numberInt" : "5" } }
 { "_id" : { "$numberInt" : "23" }, "titular" : "Cosechando una baya", "writer" : "abc", "score" : { "$numberInt" : "90" } }
 { "_id" : { "$numberInt" : "24" }, "titular" : "Cosechar", "writer" : "xyz", "score" : { "$numberInt" : "100" } }
 { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "writer" : "abc", "score" : { "$numberInt" : "200" } }
 { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "writer" : "efg", "score" : { "$numberInt" : "10" } }
 { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "writer" : "xyz", "score" : { "$numberInt" : "10" } }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "bson_dollar_ops_text_search", "cursor": {}, "pipeline": [ { "$match": { "$text": { "$search": "Manzana baya cosechar" } } }, { "$project": { "_id": 1, "titular": 1, "rank": { "$meta": "textScore" } } } ] }');
                                                     document                                                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "23" }, "titular" : "Cosechando una baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "24" }, "titular" : "Cosechar", "rank" : { "$numberDouble" : "1.0" } }
(7 rows)

-- now add sort
SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "Manzana Cosechando" } }' ORDER BY bson_orderby(document, '{ "score": {"$meta": "textScore"} }') DESC;
                                                            document                                                             
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "writer" : "xyz", "score" : { "$numberInt" : "50" } }
 { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "writer" : "efg", "score" : { "$numberInt" : "5" } }
 { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "writer" : "xyz", "score" : { "$numberInt" : "10" } }
 { "_id" : { "$numberInt" : "23" }, "titular" : "Cosechando una baya", "writer" : "abc", "score" : { "$numberInt" : "90" } }
 { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "writer" : "abc", "score" : { "$numberInt" : "200" } }
 { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "writer" : "efg", "score" : { "$numberInt" : "10" } }
 { "_id" : { "$numberInt" : "24" }, "titular" : "Cosechar", "writer" : "xyz", "score" : { "$numberInt" : "100" } }
(7 rows)

-- now add project & sort 
SELECT bson_dollar_project(document, '{ "_id": 1, "titular": 1, "rank": { "$meta": "textScore" }}') FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "Manzana Comprando baya" } }' ORDER BY bson_orderby(document, '{ "score": {"$meta": "textScore"} }') DESC;
                                               bson_dollar_project                                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "22" }, "titular" : "Comprar Manzana", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "28" }, "titular" : "Manzana con pera y baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "25" }, "titular" : "Manzana con baya", "rank" : { "$numberDouble" : "2.0" } }
 { "_id" : { "$numberInt" : "21" }, "titular" : "Manzana", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "23" }, "titular" : "Cosechando una baya", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "27" }, "titular" : "Manzana con pera", "rank" : { "$numberDouble" : "1.0" } }
(6 rows)

-- now do group
WITH r1 AS (SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "Manzana" } }' )
SELECT BSONMAX(bson_expression_get(document, '{ "": "$score" }')), bson_expression_get(document, '{ "": { "$meta": "textScore" } }') FROM r1 GROUP BY bson_expression_get(document, '{ "": { "$meta": "textScore" } }');
              bsonmax              |         bson_expression_get          
---------------------------------------------------------------------
 { "" : { "$numberInt" : "200" } } | { "" : { "$numberDouble" : "1.0" } }
(1 row)

-- scenarios without $text should return 'query requires text score metadata, but it is not available'
SELECT bson_dollar_project(document, '{ "_id": 1, "headline": 1, "rank": { "$meta": "textScore" }}') FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "score": { "$exists": true } }';
ERROR:  The query needs text score metadata, but this required information is currently unavailable.
CONTEXT:  while executing command on localhost:58070
SELECT bson_dollar_add_fields(document, '{ "_id": 1, "headline": 1, "rank": { "$meta": "textScore" }}') FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "score": { "$exists": true } }';
ERROR:  The query needs text score metadata, but this required information is currently unavailable.
CONTEXT:  while executing command on localhost:58070
SELECT bson_dollar_project_find(document, '{ "_id": 1, "headline": 1, "rank": { "$meta": "textScore" }}') FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "score": { "$exists": true } }';
ERROR:  The query needs text score metadata, but this required information is currently unavailable.
CONTEXT:  while executing command on localhost:58070
SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "score": { "$exists": true } }' ORDER BY bson_orderby(document, '{ "score": {"$meta": "textScore"} }') DESC;
ERROR:  The query needs text score metadata, but this required information is currently unavailable.
CONTEXT:  while executing command on localhost:58070
WITH r1 AS (SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "score": { "$exists": true } }' )
SELECT BSONMAX(bson_expression_get(document, '{ "": "$score" }')) FROM r1 GROUP BY bson_expression_get(document, '{ "": { "$meta": "textScore" } }');
ERROR:  The query needs text score metadata, but this required information is currently unavailable.
CONTEXT:  while executing command on localhost:58070
-- test with custom weights.
CALL documentdb_api.drop_indexes('db', '{ "dropIndexes": "bson_dollar_ops_text_search", "index": "titular_text" }');
                          retval                          
---------------------------------------------------------------------
 { "ok" : true, "nIndexesWas" : { "$numberLong" : "2" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 31, "alpha": "red blue green", "beta": "yellow orange" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 32, "alpha": "yellow orange blue", "beta": "red blue purple" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "bson_dollar_ops_text_search", "indexes": [ { "key": { "alpha": "text" }, "name": "alpha_1", "weights": { "alpha": 10, "beta": 1 } } ] }', TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

-- returns 31, 32
SELECT bson_dollar_add_fields(document, '{ "rank": { "$meta": "textScore" }}') FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "red" } }' ORDER BY bson_orderby(document, '{ "score": {"$meta": "textScore"} }') DESC;
                                                                  bson_dollar_add_fields                                                                  
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "31" }, "alpha" : "red blue green", "beta" : "yellow orange", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "32" }, "alpha" : "yellow orange blue", "beta" : "red blue purple", "rank" : { "$numberDouble" : "0.10000000149011611938" } }
(2 rows)

-- Returns 32, 31
SELECT bson_dollar_add_fields(document, '{ "rank": { "$meta": "textScore" }}') FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "orange" } }' ORDER BY bson_orderby(document, '{ "score": {"$meta": "textScore"} }') DESC;
                                                               bson_dollar_add_fields                                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "32" }, "alpha" : "yellow orange blue", "beta" : "red blue purple", "rank" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "31" }, "alpha" : "red blue green", "beta" : "yellow orange", "rank" : { "$numberDouble" : "0.10000000149011611938" } }
(2 rows)

-- test wildcard handling
-- this is a variant of the JS test: blog_textwild.js
CALL documentdb_api.drop_indexes('db', '{ "dropIndexes": "bson_dollar_ops_text_search", "index": "alpha_1" }');
                          retval                          
---------------------------------------------------------------------
 { "ok" : true, "nIndexesWas" : { "$numberLong" : "2" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 33, "heading": "my travel story", "content": "this is a new travel blog I am writing. cheers sam" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 34, "heading": "my 2nd story", "content": "this is a new travel blog I am writing. cheers" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bson_dollar_ops_text_search', '{ "_id": 35, "heading": "mountains are Beautiful for writing sam", "content": "this is a new travel blog I am writing. cheers" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "bson_dollar_ops_text_search", "indexes": [ { "key": { "dummy": "text", "$**": "text" }, "name": "alpha_1" } ] }', TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT document FROM documentdb_api.collection('db', 'bson_dollar_ops_text_search') WHERE document @@ '{ "$text": { "$search": "travel" } }' ORDER BY object_id;
                                                                         document                                                                         
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "33" }, "heading" : "my travel story", "content" : "this is a new travel blog I am writing. cheers sam" }
 { "_id" : { "$numberInt" : "34" }, "heading" : "my 2nd story", "content" : "this is a new travel blog I am writing. cheers" }
 { "_id" : { "$numberInt" : "35" }, "heading" : "mountains are Beautiful for writing sam", "content" : "this is a new travel blog I am writing. cheers" }
(3 rows)

CALL documentdb_api.drop_indexes('db', '{ "dropIndexes": "bson_dollar_ops_text_search", "index": "alpha_1" }');
                          retval                          
---------------------------------------------------------------------
 { "ok" : true, "nIndexesWas" : { "$numberLong" : "2" } }
(1 row)

-- recreate this so that test output for further tests does not change
SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "bson_dollar_ops_text_search", "indexes": [ { "key": { "alpha": "text" }, "name": "alpha_1", "weights": { "alpha": 10, "beta": 1 } } ] }', TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

-- Test TSQuery generation.
SELECT documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"mental health\"" }'::documentdb_core.bson);
 bson_query_to_tsquery 
---------------------------------------------------------------------
 'mental' <-> 'health'
(1 row)

SELECT documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"mental health\" wellbeing nutrition" }'::documentdb_core.bson);
             bson_query_to_tsquery              
---------------------------------------------------------------------
 ( 'wellb' | 'nutrit' ) & 'mental' <-> 'health'
(1 row)

SELECT documentdb_api_internal.bson_query_to_tsquery('{ "$search": "hydrate stretch recover" }'::documentdb_core.bson);
     bson_query_to_tsquery      
---------------------------------------------------------------------
 'hydrat' | 'stretch' | 'recov'
(1 row)

SELECT documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"cardio training\"" }'::documentdb_core.bson);
 bson_query_to_tsquery 
---------------------------------------------------------------------
 'cardio' <-> 'train'
(1 row)

SELECT documentdb_api_internal.bson_query_to_tsquery('{ "$search": "cardio -training" }'::documentdb_core.bson);
 bson_query_to_tsquery 
---------------------------------------------------------------------
 'cardio' & !'train'
(1 row)

SELECT documentdb_api_internal.bson_query_to_tsquery('{ "$search": "cardio -training -burnout" }'::documentdb_core.bson);
      bson_query_to_tsquery       
---------------------------------------------------------------------
 'cardio' & !'train' & !'burnout'
(1 row)

SELECT documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"cardio training\" -fatigue -burnout" }'::documentdb_core.bson);
             bson_query_to_tsquery             
---------------------------------------------------------------------
 'cardio' <-> 'train' & !'fatigu' & !'burnout'
(1 row)

SELECT documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"cardio training\" diet plan -fatigue -burnout" }'::documentdb_core.bson);
                        bson_query_to_tsquery                        
---------------------------------------------------------------------
 'cardio' <-> 'train' & ( 'diet' | 'plan' ) & !'fatigu' & !'burnout'
(1 row)

SELECT documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"cardio training\" diet plan -fatigue -burnout wellbeing" }'::documentdb_core.bson);
                             bson_query_to_tsquery                             
---------------------------------------------------------------------
 'cardio' <-> 'train' & ( 'diet' | 'plan' | 'wellb' ) & !'fatigu' & !'burnout'
(1 row)

-- this matches
SELECT to_tsvector('consistent cardio training with a diet plan improves wellbeing') @@ documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"cardio training\" diet plan -fatigue -burnout wellbeing" }'::documentdb_core.bson);
 ?column? 
---------------------------------------------------------------------
 t
(1 row)

-- this shouldn't match
SELECT to_tsvector('cardio training with a diet plan can lead to fatigue') @@ documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"cardio training\" diet plan -fatigue -burnout wellbeing" }'::documentdb_core.bson);
 ?column? 
---------------------------------------------------------------------
 f
(1 row)

SELECT to_tsvector('stretching improves general wellbeing and focus') @@ documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"cardio training\" diet plan -fatigue -burnout wellbeing" }'::documentdb_core.bson);
 ?column? 
---------------------------------------------------------------------
 f
(1 row)

SELECT to_tsvector('burnout is a risk when doing cardio training without breaks') @@ documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"cardio training\" diet plan -fatigue -burnout wellbeing" }'::documentdb_core.bson);
 ?column? 
---------------------------------------------------------------------
 f
(1 row)

-- Phrase: First one doesn't match, second one does.
SELECT to_tsvector('consistent stretching is the cornerstone of wellbeing') @@ documentdb_api_internal.bson_query_to_tsquery('{ "$search": "\"cardio training\" diet plan -fatigue -burnout wellbeing" }'::documentdb_core.bson);
 ?column? 
---------------------------------------------------------------------
 f
(1 row)

SELECT to_tsvector('a good diet plan improves long-term wellbeing') @@ documentdb_api_internal.bson_query_to_tsquery('{ "$search": "diet plan -fatigue -burnout wellbeing" }'::documentdb_core.bson);
 ?column? 
---------------------------------------------------------------------
 t
(1 row)

-- Use language check
-- synonyms within a language work.
SELECT to_tsvector('portuguese', 'Em atualidade, sempre é possível manter-se saudável') @@ documentdb_api_internal.bson_query_to_tsquery('{ "$search": "atualmente", "$language": "pt" }'::documentdb_core.bson);
 ?column? 
---------------------------------------------------------------------
 t
(1 row)

-- Only one text index allowed
SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "bson_dollar_ops_text_search2", "indexes": [ { "key": { "gamma": "text" }, "name": "gamma_text" } ] }', TRUE);
NOTICE:  creating collection
                                                                                                   create_indexes_non_concurrently                                                                                                   
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : true, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "bson_dollar_ops_text_search2", "indexes": [ { "key": { "gamma": "text" }, "name": "gamma_text" } ] }', TRUE);
                                                                                                                           create_indexes_non_concurrently                                                                                                                            
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "2" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "note" : "All specified indexes already exist", "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{ "createIndexes": "bson_dollar_ops_text_search", "indexes": [ { "key": { "desc": "text", "extra": "text" }, "name": "desc_text" } ] }', TRUE);
ERROR:  Expected exactly one text index. Requested index: { "v" : 2, "key" : { "desc" : "text", "extra" : "text" }, "name" : "desc_text" }, existing index: { "v" : 2, "key" : { "alpha" : "text" }, "name" : "alpha_1", "weights" : { "alpha" : 10, "beta" : 1 } }
